'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión del motor en tiempo de ejecución:2.0.50727.5485
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
 Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("BDPECCRCCDataSet"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class BDPECCRCCDataSet
    Inherits Global.System.Data.DataSet
    
    Private tableXXXPCCRCC_DatosPantillaRES01 As XXXPCCRCC_DatosPantillaRES01DataTable
    
    Private tablevCCRCC_GrillaPrincipalPlantilla01 As vCCRCC_GrillaPrincipalPlantilla01DataTable
    
    Private tablevCCRCC_GrillaSecundariaPlantilla01 As vCCRCC_GrillaSecundariaPlantilla01DataTable
    
    Private tableXXXPCCRCC_Indicadores_Sel As XXXPCCRCC_Indicadores_SelDataTable
    
    Private tableXXXPCCRCC_PCCategorias_Sel As XXXPCCRCC_PCCategorias_SelDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("XXXPCCRCC_DatosPantillaRES01")) Is Nothing) Then
                MyBase.Tables.Add(New XXXPCCRCC_DatosPantillaRES01DataTable(ds.Tables("XXXPCCRCC_DatosPantillaRES01")))
            End If
            If (Not (ds.Tables("vCCRCC_GrillaPrincipalPlantilla01")) Is Nothing) Then
                MyBase.Tables.Add(New vCCRCC_GrillaPrincipalPlantilla01DataTable(ds.Tables("vCCRCC_GrillaPrincipalPlantilla01")))
            End If
            If (Not (ds.Tables("vCCRCC_GrillaSecundariaPlantilla01")) Is Nothing) Then
                MyBase.Tables.Add(New vCCRCC_GrillaSecundariaPlantilla01DataTable(ds.Tables("vCCRCC_GrillaSecundariaPlantilla01")))
            End If
            If (Not (ds.Tables("XXXPCCRCC_Indicadores_Sel")) Is Nothing) Then
                MyBase.Tables.Add(New XXXPCCRCC_Indicadores_SelDataTable(ds.Tables("XXXPCCRCC_Indicadores_Sel")))
            End If
            If (Not (ds.Tables("XXXPCCRCC_PCCategorias_Sel")) Is Nothing) Then
                MyBase.Tables.Add(New XXXPCCRCC_PCCategorias_SelDataTable(ds.Tables("XXXPCCRCC_PCCategorias_Sel")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property XXXPCCRCC_DatosPantillaRES01() As XXXPCCRCC_DatosPantillaRES01DataTable
        Get
            Return Me.tableXXXPCCRCC_DatosPantillaRES01
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property vCCRCC_GrillaPrincipalPlantilla01() As vCCRCC_GrillaPrincipalPlantilla01DataTable
        Get
            Return Me.tablevCCRCC_GrillaPrincipalPlantilla01
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property vCCRCC_GrillaSecundariaPlantilla01() As vCCRCC_GrillaSecundariaPlantilla01DataTable
        Get
            Return Me.tablevCCRCC_GrillaSecundariaPlantilla01
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property XXXPCCRCC_Indicadores_Sel() As XXXPCCRCC_Indicadores_SelDataTable
        Get
            Return Me.tableXXXPCCRCC_Indicadores_Sel
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property XXXPCCRCC_PCCategorias_Sel() As XXXPCCRCC_PCCategorias_SelDataTable
        Get
            Return Me.tableXXXPCCRCC_PCCategorias_Sel
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As BDPECCRCCDataSet = CType(MyBase.Clone,BDPECCRCCDataSet)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet
            ds.ReadXml(reader)
            If (Not (ds.Tables("XXXPCCRCC_DatosPantillaRES01")) Is Nothing) Then
                MyBase.Tables.Add(New XXXPCCRCC_DatosPantillaRES01DataTable(ds.Tables("XXXPCCRCC_DatosPantillaRES01")))
            End If
            If (Not (ds.Tables("vCCRCC_GrillaPrincipalPlantilla01")) Is Nothing) Then
                MyBase.Tables.Add(New vCCRCC_GrillaPrincipalPlantilla01DataTable(ds.Tables("vCCRCC_GrillaPrincipalPlantilla01")))
            End If
            If (Not (ds.Tables("vCCRCC_GrillaSecundariaPlantilla01")) Is Nothing) Then
                MyBase.Tables.Add(New vCCRCC_GrillaSecundariaPlantilla01DataTable(ds.Tables("vCCRCC_GrillaSecundariaPlantilla01")))
            End If
            If (Not (ds.Tables("XXXPCCRCC_Indicadores_Sel")) Is Nothing) Then
                MyBase.Tables.Add(New XXXPCCRCC_Indicadores_SelDataTable(ds.Tables("XXXPCCRCC_Indicadores_Sel")))
            End If
            If (Not (ds.Tables("XXXPCCRCC_PCCategorias_Sel")) Is Nothing) Then
                MyBase.Tables.Add(New XXXPCCRCC_PCCategorias_SelDataTable(ds.Tables("XXXPCCRCC_PCCategorias_Sel")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableXXXPCCRCC_DatosPantillaRES01 = CType(MyBase.Tables("XXXPCCRCC_DatosPantillaRES01"),XXXPCCRCC_DatosPantillaRES01DataTable)
        If (initTable = true) Then
            If (Not (Me.tableXXXPCCRCC_DatosPantillaRES01) Is Nothing) Then
                Me.tableXXXPCCRCC_DatosPantillaRES01.InitVars
            End If
        End If
        Me.tablevCCRCC_GrillaPrincipalPlantilla01 = CType(MyBase.Tables("vCCRCC_GrillaPrincipalPlantilla01"),vCCRCC_GrillaPrincipalPlantilla01DataTable)
        If (initTable = true) Then
            If (Not (Me.tablevCCRCC_GrillaPrincipalPlantilla01) Is Nothing) Then
                Me.tablevCCRCC_GrillaPrincipalPlantilla01.InitVars
            End If
        End If
        Me.tablevCCRCC_GrillaSecundariaPlantilla01 = CType(MyBase.Tables("vCCRCC_GrillaSecundariaPlantilla01"),vCCRCC_GrillaSecundariaPlantilla01DataTable)
        If (initTable = true) Then
            If (Not (Me.tablevCCRCC_GrillaSecundariaPlantilla01) Is Nothing) Then
                Me.tablevCCRCC_GrillaSecundariaPlantilla01.InitVars
            End If
        End If
        Me.tableXXXPCCRCC_Indicadores_Sel = CType(MyBase.Tables("XXXPCCRCC_Indicadores_Sel"),XXXPCCRCC_Indicadores_SelDataTable)
        If (initTable = true) Then
            If (Not (Me.tableXXXPCCRCC_Indicadores_Sel) Is Nothing) Then
                Me.tableXXXPCCRCC_Indicadores_Sel.InitVars
            End If
        End If
        Me.tableXXXPCCRCC_PCCategorias_Sel = CType(MyBase.Tables("XXXPCCRCC_PCCategorias_Sel"),XXXPCCRCC_PCCategorias_SelDataTable)
        If (initTable = true) Then
            If (Not (Me.tableXXXPCCRCC_PCCategorias_Sel) Is Nothing) Then
                Me.tableXXXPCCRCC_PCCategorias_Sel.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub InitClass()
        Me.DataSetName = "BDPECCRCCDataSet"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/BDPECCRCCDataSet.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableXXXPCCRCC_DatosPantillaRES01 = New XXXPCCRCC_DatosPantillaRES01DataTable
        MyBase.Tables.Add(Me.tableXXXPCCRCC_DatosPantillaRES01)
        Me.tablevCCRCC_GrillaPrincipalPlantilla01 = New vCCRCC_GrillaPrincipalPlantilla01DataTable
        MyBase.Tables.Add(Me.tablevCCRCC_GrillaPrincipalPlantilla01)
        Me.tablevCCRCC_GrillaSecundariaPlantilla01 = New vCCRCC_GrillaSecundariaPlantilla01DataTable
        MyBase.Tables.Add(Me.tablevCCRCC_GrillaSecundariaPlantilla01)
        Me.tableXXXPCCRCC_Indicadores_Sel = New XXXPCCRCC_Indicadores_SelDataTable
        MyBase.Tables.Add(Me.tableXXXPCCRCC_Indicadores_Sel)
        Me.tableXXXPCCRCC_PCCategorias_Sel = New XXXPCCRCC_PCCategorias_SelDataTable
        MyBase.Tables.Add(Me.tableXXXPCCRCC_PCCategorias_Sel)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeXXXPCCRCC_DatosPantillaRES01() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializevCCRCC_GrillaPrincipalPlantilla01() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializevCCRCC_GrillaSecundariaPlantilla01() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeXXXPCCRCC_Indicadores_Sel() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Function ShouldSerializeXXXPCCRCC_PCCategorias_Sel() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As BDPECCRCCDataSet = New BDPECCRCCDataSet
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    Public Delegate Sub XXXPCCRCC_DatosPantillaRES01RowChangeEventHandler(ByVal sender As Object, ByVal e As XXXPCCRCC_DatosPantillaRES01RowChangeEvent)
    
    Public Delegate Sub vCCRCC_GrillaPrincipalPlantilla01RowChangeEventHandler(ByVal sender As Object, ByVal e As vCCRCC_GrillaPrincipalPlantilla01RowChangeEvent)
    
    Public Delegate Sub vCCRCC_GrillaSecundariaPlantilla01RowChangeEventHandler(ByVal sender As Object, ByVal e As vCCRCC_GrillaSecundariaPlantilla01RowChangeEvent)
    
    Public Delegate Sub XXXPCCRCC_Indicadores_SelRowChangeEventHandler(ByVal sender As Object, ByVal e As XXXPCCRCC_Indicadores_SelRowChangeEvent)
    
    Public Delegate Sub XXXPCCRCC_PCCategorias_SelRowChangeEventHandler(ByVal sender As Object, ByVal e As XXXPCCRCC_PCCategorias_SelRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class XXXPCCRCC_DatosPantillaRES01DataTable
        Inherits Global.System.Data.TypedTableBase(Of XXXPCCRCC_DatosPantillaRES01Row)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnCanal As Global.System.Data.DataColumn
        
        Private columnCategoria As Global.System.Data.DataColumn
        
        Private columnCCVNTA As Global.System.Data.DataColumn
        
        Private columnCodigoProducto As Global.System.Data.DataColumn
        
        Private columnFrecuencia As Global.System.Data.DataColumn
        
        Private columnTipoDato As Global.System.Data.DataColumn
        
        Private columnPeriodo As Global.System.Data.DataColumn
        
        Private columnEtiqueta As Global.System.Data.DataColumn
        
        Private columnIAntFac As Global.System.Data.DataColumn
        
        Private columnCmpFac As Global.System.Data.DataColumn
        
        Private columnInvFac As Global.System.Data.DataColumn
        
        Private columnPre As Global.System.Data.DataColumn
        
        Private columnVtaFac As Global.System.Data.DataColumn
        
        Private columnTot As Global.System.Data.DataColumn
        
        Private columnTitle As Global.System.Data.DataColumn
        
        Private columnFirstName As Global.System.Data.DataColumn
        
        Private columnMiddleName As Global.System.Data.DataColumn
        
        Private columnLastName As Global.System.Data.DataColumn
        
        Private columnEmailAddress As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "XXXPCCRCC_DatosPantillaRES01"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CanalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCanal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CategoriaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCategoria
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CCVNTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCCVNTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodigoProductoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoProducto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FrecuenciaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFrecuencia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TipoDatoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoDato
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PeriodoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPeriodo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EtiquetaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEtiqueta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IAntFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIAntFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CmpFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCmpFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property InvFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnInvFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property PreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property VtaFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVtaFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TotColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTot
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TitleColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTitle
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property FirstNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFirstName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MiddleNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMiddleName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property LastNameColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLastName
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EmailAddressColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEmailAddress
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As XXXPCCRCC_DatosPantillaRES01Row
            Get
                Return CType(Me.Rows(index),XXXPCCRCC_DatosPantillaRES01Row)
            End Get
        End Property
        
        Public Event XXXPCCRCC_DatosPantillaRES01RowChanging As XXXPCCRCC_DatosPantillaRES01RowChangeEventHandler
        
        Public Event XXXPCCRCC_DatosPantillaRES01RowChanged As XXXPCCRCC_DatosPantillaRES01RowChangeEventHandler
        
        Public Event XXXPCCRCC_DatosPantillaRES01RowDeleting As XXXPCCRCC_DatosPantillaRES01RowChangeEventHandler
        
        Public Event XXXPCCRCC_DatosPantillaRES01RowDeleted As XXXPCCRCC_DatosPantillaRES01RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddXXXPCCRCC_DatosPantillaRES01Row(ByVal row As XXXPCCRCC_DatosPantillaRES01Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddXXXPCCRCC_DatosPantillaRES01Row( _
                    ByVal Canal As String,  _
                    ByVal Categoria As String,  _
                    ByVal CCVNTA As Decimal,  _
                    ByVal CodigoProducto As Short,  _
                    ByVal Frecuencia As Byte,  _
                    ByVal TipoDato As Byte,  _
                    ByVal Periodo As Integer,  _
                    ByVal Etiqueta As String,  _
                    ByVal IAntFac As Decimal,  _
                    ByVal CmpFac As Decimal,  _
                    ByVal InvFac As Decimal,  _
                    ByVal Pre As Decimal,  _
                    ByVal VtaFac As Decimal,  _
                    ByVal Tot As Decimal,  _
                    ByVal Title As String,  _
                    ByVal FirstName As String,  _
                    ByVal MiddleName As String,  _
                    ByVal LastName As String,  _
                    ByVal EmailAddress As String) As XXXPCCRCC_DatosPantillaRES01Row
            Dim rowXXXPCCRCC_DatosPantillaRES01Row As XXXPCCRCC_DatosPantillaRES01Row = CType(Me.NewRow,XXXPCCRCC_DatosPantillaRES01Row)
            Dim columnValuesArray() As Object = New Object() {Nothing, Canal, Categoria, CCVNTA, CodigoProducto, Frecuencia, TipoDato, Periodo, Etiqueta, IAntFac, CmpFac, InvFac, Pre, VtaFac, Tot, Title, FirstName, MiddleName, LastName, EmailAddress}
            rowXXXPCCRCC_DatosPantillaRES01Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowXXXPCCRCC_DatosPantillaRES01Row)
            Return rowXXXPCCRCC_DatosPantillaRES01Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function FindById(ByVal Id As Integer) As XXXPCCRCC_DatosPantillaRES01Row
            Return CType(Me.Rows.Find(New Object() {Id}),XXXPCCRCC_DatosPantillaRES01Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As XXXPCCRCC_DatosPantillaRES01DataTable = CType(MyBase.Clone,XXXPCCRCC_DatosPantillaRES01DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New XXXPCCRCC_DatosPantillaRES01DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnCanal = MyBase.Columns("Canal")
            Me.columnCategoria = MyBase.Columns("Categoria")
            Me.columnCCVNTA = MyBase.Columns("CCVNTA")
            Me.columnCodigoProducto = MyBase.Columns("CodigoProducto")
            Me.columnFrecuencia = MyBase.Columns("Frecuencia")
            Me.columnTipoDato = MyBase.Columns("TipoDato")
            Me.columnPeriodo = MyBase.Columns("Periodo")
            Me.columnEtiqueta = MyBase.Columns("Etiqueta")
            Me.columnIAntFac = MyBase.Columns("IAntFac")
            Me.columnCmpFac = MyBase.Columns("CmpFac")
            Me.columnInvFac = MyBase.Columns("InvFac")
            Me.columnPre = MyBase.Columns("Pre")
            Me.columnVtaFac = MyBase.Columns("VtaFac")
            Me.columnTot = MyBase.Columns("Tot")
            Me.columnTitle = MyBase.Columns("Title")
            Me.columnFirstName = MyBase.Columns("FirstName")
            Me.columnMiddleName = MyBase.Columns("MiddleName")
            Me.columnLastName = MyBase.Columns("LastName")
            Me.columnEmailAddress = MyBase.Columns("EmailAddress")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnCanal = New Global.System.Data.DataColumn("Canal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCanal)
            Me.columnCategoria = New Global.System.Data.DataColumn("Categoria", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCategoria)
            Me.columnCCVNTA = New Global.System.Data.DataColumn("CCVNTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCCVNTA)
            Me.columnCodigoProducto = New Global.System.Data.DataColumn("CodigoProducto", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoProducto)
            Me.columnFrecuencia = New Global.System.Data.DataColumn("Frecuencia", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFrecuencia)
            Me.columnTipoDato = New Global.System.Data.DataColumn("TipoDato", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoDato)
            Me.columnPeriodo = New Global.System.Data.DataColumn("Periodo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPeriodo)
            Me.columnEtiqueta = New Global.System.Data.DataColumn("Etiqueta", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEtiqueta)
            Me.columnIAntFac = New Global.System.Data.DataColumn("IAntFac", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIAntFac)
            Me.columnCmpFac = New Global.System.Data.DataColumn("CmpFac", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCmpFac)
            Me.columnInvFac = New Global.System.Data.DataColumn("InvFac", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnInvFac)
            Me.columnPre = New Global.System.Data.DataColumn("Pre", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPre)
            Me.columnVtaFac = New Global.System.Data.DataColumn("VtaFac", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVtaFac)
            Me.columnTot = New Global.System.Data.DataColumn("Tot", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTot)
            Me.columnTitle = New Global.System.Data.DataColumn("Title", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTitle)
            Me.columnFirstName = New Global.System.Data.DataColumn("FirstName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFirstName)
            Me.columnMiddleName = New Global.System.Data.DataColumn("MiddleName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMiddleName)
            Me.columnLastName = New Global.System.Data.DataColumn("LastName", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLastName)
            Me.columnEmailAddress = New Global.System.Data.DataColumn("EmailAddress", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEmailAddress)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnId}, true))
            Me.columnId.AutoIncrement = true
            Me.columnId.AutoIncrementSeed = -1
            Me.columnId.AutoIncrementStep = -1
            Me.columnId.AllowDBNull = false
            Me.columnId.ReadOnly = true
            Me.columnId.Unique = true
            Me.columnCanal.AllowDBNull = false
            Me.columnCanal.MaxLength = 400
            Me.columnCategoria.AllowDBNull = false
            Me.columnCategoria.MaxLength = 400
            Me.columnCCVNTA.AllowDBNull = false
            Me.columnTipoDato.AllowDBNull = false
            Me.columnEtiqueta.AllowDBNull = false
            Me.columnEtiqueta.MaxLength = 3
            Me.columnTitle.MaxLength = 100
            Me.columnFirstName.MaxLength = 100
            Me.columnMiddleName.MaxLength = 100
            Me.columnLastName.MaxLength = 100
            Me.columnEmailAddress.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewXXXPCCRCC_DatosPantillaRES01Row() As XXXPCCRCC_DatosPantillaRES01Row
            Return CType(Me.NewRow,XXXPCCRCC_DatosPantillaRES01Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New XXXPCCRCC_DatosPantillaRES01Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(XXXPCCRCC_DatosPantillaRES01Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.XXXPCCRCC_DatosPantillaRES01RowChangedEvent) Is Nothing) Then
                RaiseEvent XXXPCCRCC_DatosPantillaRES01RowChanged(Me, New XXXPCCRCC_DatosPantillaRES01RowChangeEvent(CType(e.Row,XXXPCCRCC_DatosPantillaRES01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.XXXPCCRCC_DatosPantillaRES01RowChangingEvent) Is Nothing) Then
                RaiseEvent XXXPCCRCC_DatosPantillaRES01RowChanging(Me, New XXXPCCRCC_DatosPantillaRES01RowChangeEvent(CType(e.Row,XXXPCCRCC_DatosPantillaRES01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.XXXPCCRCC_DatosPantillaRES01RowDeletedEvent) Is Nothing) Then
                RaiseEvent XXXPCCRCC_DatosPantillaRES01RowDeleted(Me, New XXXPCCRCC_DatosPantillaRES01RowChangeEvent(CType(e.Row,XXXPCCRCC_DatosPantillaRES01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.XXXPCCRCC_DatosPantillaRES01RowDeletingEvent) Is Nothing) Then
                RaiseEvent XXXPCCRCC_DatosPantillaRES01RowDeleting(Me, New XXXPCCRCC_DatosPantillaRES01RowChangeEvent(CType(e.Row,XXXPCCRCC_DatosPantillaRES01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveXXXPCCRCC_DatosPantillaRES01Row(ByVal row As XXXPCCRCC_DatosPantillaRES01Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As BDPECCRCCDataSet = New BDPECCRCCDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "XXXPCCRCC_DatosPantillaRES01DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class vCCRCC_GrillaPrincipalPlantilla01DataTable
        Inherits Global.System.Data.TypedTableBase(Of vCCRCC_GrillaPrincipalPlantilla01Row)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnMedicionActual As Global.System.Data.DataColumn
        
        Private columnCodigoZona As Global.System.Data.DataColumn
        
        Private columnCanal As Global.System.Data.DataColumn
        
        Private columnCategoria As Global.System.Data.DataColumn
        
        Private columnTipoDato As Global.System.Data.DataColumn
        
        Private columnCodigoProducto As Global.System.Data.DataColumn
        
        Private columnP0_PCmp As Global.System.Data.DataColumn
        
        Private columnP0_PPre As Global.System.Data.DataColumn
        
        Private columnP0_PInv As Global.System.Data.DataColumn
        
        Private columnP0_PVta As Global.System.Data.DataColumn
        
        Private columnP0_PNre As Global.System.Data.DataColumn
        
        Private columnP0_SFR As Global.System.Data.DataColumn
        
        Private columnP0_SCmp As Global.System.Data.DataColumn
        
        Private columnP0_SPre As Global.System.Data.DataColumn
        
        Private columnP0_SInv As Global.System.Data.DataColumn
        
        Private columnP0_SVta As Global.System.Data.DataColumn
        
        Private columnP0_SNre As Global.System.Data.DataColumn
        
        Private columnP0_IAntFac As Global.System.Data.DataColumn
        
        Private columnP0_CmpFac As Global.System.Data.DataColumn
        
        Private columnP0_Precio As Global.System.Data.DataColumn
        
        Private columnP0_InvFac As Global.System.Data.DataColumn
        
        Private columnP0_VtaFac As Global.System.Data.DataColumn
        
        Private columnP0_Regs As Global.System.Data.DataColumn
        
        Private columnP1_IAntFac As Global.System.Data.DataColumn
        
        Private columnP1_CmpFac As Global.System.Data.DataColumn
        
        Private columnP1_Precio As Global.System.Data.DataColumn
        
        Private columnP1_InvFac As Global.System.Data.DataColumn
        
        Private columnP1_VtaFac As Global.System.Data.DataColumn
        
        Private columnP1_Regs As Global.System.Data.DataColumn
        
        Private columnP2_IAntFac As Global.System.Data.DataColumn
        
        Private columnP2_CmpFac As Global.System.Data.DataColumn
        
        Private columnP2_Precio As Global.System.Data.DataColumn
        
        Private columnP2_InvFac As Global.System.Data.DataColumn
        
        Private columnP2_VtaFac As Global.System.Data.DataColumn
        
        Private columnP2_Regs As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "vCCRCC_GrillaPrincipalPlantilla01"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MedicionActualColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMedicionActual
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodigoZonaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoZona
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CanalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCanal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CategoriaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCategoria
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TipoDatoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoDato
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodigoProductoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoProducto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P0_PCmpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP0_PCmp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P0_PPreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP0_PPre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P0_PInvColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP0_PInv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P0_PVtaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP0_PVta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P0_PNreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP0_PNre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P0_SFRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP0_SFR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P0_SCmpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP0_SCmp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P0_SPreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP0_SPre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P0_SInvColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP0_SInv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P0_SVtaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP0_SVta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P0_SNreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP0_SNre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P0_IAntFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP0_IAntFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P0_CmpFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP0_CmpFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P0_PrecioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP0_Precio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P0_InvFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP0_InvFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P0_VtaFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP0_VtaFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P0_RegsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP0_Regs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P1_IAntFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP1_IAntFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P1_CmpFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP1_CmpFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P1_PrecioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP1_Precio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P1_InvFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP1_InvFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P1_VtaFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP1_VtaFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P1_RegsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP1_Regs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P2_IAntFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP2_IAntFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P2_CmpFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP2_CmpFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P2_PrecioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP2_Precio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P2_InvFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP2_InvFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P2_VtaFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP2_VtaFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P2_RegsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP2_Regs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As vCCRCC_GrillaPrincipalPlantilla01Row
            Get
                Return CType(Me.Rows(index),vCCRCC_GrillaPrincipalPlantilla01Row)
            End Get
        End Property
        
        Public Event vCCRCC_GrillaPrincipalPlantilla01RowChanging As vCCRCC_GrillaPrincipalPlantilla01RowChangeEventHandler
        
        Public Event vCCRCC_GrillaPrincipalPlantilla01RowChanged As vCCRCC_GrillaPrincipalPlantilla01RowChangeEventHandler
        
        Public Event vCCRCC_GrillaPrincipalPlantilla01RowDeleting As vCCRCC_GrillaPrincipalPlantilla01RowChangeEventHandler
        
        Public Event vCCRCC_GrillaPrincipalPlantilla01RowDeleted As vCCRCC_GrillaPrincipalPlantilla01RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddvCCRCC_GrillaPrincipalPlantilla01Row(ByVal row As vCCRCC_GrillaPrincipalPlantilla01Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddvCCRCC_GrillaPrincipalPlantilla01Row( _
                    ByVal Id As Long,  _
                    ByVal MedicionActual As Integer,  _
                    ByVal CodigoZona As Short,  _
                    ByVal Canal As String,  _
                    ByVal Categoria As String,  _
                    ByVal TipoDato As Byte,  _
                    ByVal CodigoProducto As Short,  _
                    ByVal P0_PCmp As Decimal,  _
                    ByVal P0_PPre As Integer,  _
                    ByVal P0_PInv As Decimal,  _
                    ByVal P0_PVta As Decimal,  _
                    ByVal P0_PNre As Long,  _
                    ByVal P0_SFR As Decimal,  _
                    ByVal P0_SCmp As Decimal,  _
                    ByVal P0_SPre As Integer,  _
                    ByVal P0_SInv As Decimal,  _
                    ByVal P0_SVta As Decimal,  _
                    ByVal P0_SNre As Long,  _
                    ByVal P0_IAntFac As Decimal,  _
                    ByVal P0_CmpFac As Decimal,  _
                    ByVal P0_Precio As Integer,  _
                    ByVal P0_InvFac As Decimal,  _
                    ByVal P0_VtaFac As Decimal,  _
                    ByVal P0_Regs As Long,  _
                    ByVal P1_IAntFac As Decimal,  _
                    ByVal P1_CmpFac As Decimal,  _
                    ByVal P1_Precio As Integer,  _
                    ByVal P1_InvFac As Decimal,  _
                    ByVal P1_VtaFac As Decimal,  _
                    ByVal P1_Regs As Long,  _
                    ByVal P2_IAntFac As Decimal,  _
                    ByVal P2_CmpFac As Decimal,  _
                    ByVal P2_Precio As Integer,  _
                    ByVal P2_InvFac As Decimal,  _
                    ByVal P2_VtaFac As Decimal,  _
                    ByVal P2_Regs As Long) As vCCRCC_GrillaPrincipalPlantilla01Row
            Dim rowvCCRCC_GrillaPrincipalPlantilla01Row As vCCRCC_GrillaPrincipalPlantilla01Row = CType(Me.NewRow,vCCRCC_GrillaPrincipalPlantilla01Row)
            Dim columnValuesArray() As Object = New Object() {Id, MedicionActual, CodigoZona, Canal, Categoria, TipoDato, CodigoProducto, P0_PCmp, P0_PPre, P0_PInv, P0_PVta, P0_PNre, P0_SFR, P0_SCmp, P0_SPre, P0_SInv, P0_SVta, P0_SNre, P0_IAntFac, P0_CmpFac, P0_Precio, P0_InvFac, P0_VtaFac, P0_Regs, P1_IAntFac, P1_CmpFac, P1_Precio, P1_InvFac, P1_VtaFac, P1_Regs, P2_IAntFac, P2_CmpFac, P2_Precio, P2_InvFac, P2_VtaFac, P2_Regs}
            rowvCCRCC_GrillaPrincipalPlantilla01Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowvCCRCC_GrillaPrincipalPlantilla01Row)
            Return rowvCCRCC_GrillaPrincipalPlantilla01Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As vCCRCC_GrillaPrincipalPlantilla01DataTable = CType(MyBase.Clone,vCCRCC_GrillaPrincipalPlantilla01DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New vCCRCC_GrillaPrincipalPlantilla01DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnMedicionActual = MyBase.Columns("MedicionActual")
            Me.columnCodigoZona = MyBase.Columns("CodigoZona")
            Me.columnCanal = MyBase.Columns("Canal")
            Me.columnCategoria = MyBase.Columns("Categoria")
            Me.columnTipoDato = MyBase.Columns("TipoDato")
            Me.columnCodigoProducto = MyBase.Columns("CodigoProducto")
            Me.columnP0_PCmp = MyBase.Columns("P0_PCmp")
            Me.columnP0_PPre = MyBase.Columns("P0_PPre")
            Me.columnP0_PInv = MyBase.Columns("P0_PInv")
            Me.columnP0_PVta = MyBase.Columns("P0_PVta")
            Me.columnP0_PNre = MyBase.Columns("P0_PNre")
            Me.columnP0_SFR = MyBase.Columns("P0_SFR")
            Me.columnP0_SCmp = MyBase.Columns("P0_SCmp")
            Me.columnP0_SPre = MyBase.Columns("P0_SPre")
            Me.columnP0_SInv = MyBase.Columns("P0_SInv")
            Me.columnP0_SVta = MyBase.Columns("P0_SVta")
            Me.columnP0_SNre = MyBase.Columns("P0_SNre")
            Me.columnP0_IAntFac = MyBase.Columns("P0_IAntFac")
            Me.columnP0_CmpFac = MyBase.Columns("P0_CmpFac")
            Me.columnP0_Precio = MyBase.Columns("P0_Precio")
            Me.columnP0_InvFac = MyBase.Columns("P0_InvFac")
            Me.columnP0_VtaFac = MyBase.Columns("P0_VtaFac")
            Me.columnP0_Regs = MyBase.Columns("P0_Regs")
            Me.columnP1_IAntFac = MyBase.Columns("P1_IAntFac")
            Me.columnP1_CmpFac = MyBase.Columns("P1_CmpFac")
            Me.columnP1_Precio = MyBase.Columns("P1_Precio")
            Me.columnP1_InvFac = MyBase.Columns("P1_InvFac")
            Me.columnP1_VtaFac = MyBase.Columns("P1_VtaFac")
            Me.columnP1_Regs = MyBase.Columns("P1_Regs")
            Me.columnP2_IAntFac = MyBase.Columns("P2_IAntFac")
            Me.columnP2_CmpFac = MyBase.Columns("P2_CmpFac")
            Me.columnP2_Precio = MyBase.Columns("P2_Precio")
            Me.columnP2_InvFac = MyBase.Columns("P2_InvFac")
            Me.columnP2_VtaFac = MyBase.Columns("P2_VtaFac")
            Me.columnP2_Regs = MyBase.Columns("P2_Regs")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnMedicionActual = New Global.System.Data.DataColumn("MedicionActual", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMedicionActual)
            Me.columnCodigoZona = New Global.System.Data.DataColumn("CodigoZona", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoZona)
            Me.columnCanal = New Global.System.Data.DataColumn("Canal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCanal)
            Me.columnCategoria = New Global.System.Data.DataColumn("Categoria", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCategoria)
            Me.columnTipoDato = New Global.System.Data.DataColumn("TipoDato", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoDato)
            Me.columnCodigoProducto = New Global.System.Data.DataColumn("CodigoProducto", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoProducto)
            Me.columnP0_PCmp = New Global.System.Data.DataColumn("P0_PCmp", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP0_PCmp)
            Me.columnP0_PPre = New Global.System.Data.DataColumn("P0_PPre", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP0_PPre)
            Me.columnP0_PInv = New Global.System.Data.DataColumn("P0_PInv", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP0_PInv)
            Me.columnP0_PVta = New Global.System.Data.DataColumn("P0_PVta", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP0_PVta)
            Me.columnP0_PNre = New Global.System.Data.DataColumn("P0_PNre", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP0_PNre)
            Me.columnP0_SFR = New Global.System.Data.DataColumn("P0_SFR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP0_SFR)
            Me.columnP0_SCmp = New Global.System.Data.DataColumn("P0_SCmp", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP0_SCmp)
            Me.columnP0_SPre = New Global.System.Data.DataColumn("P0_SPre", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP0_SPre)
            Me.columnP0_SInv = New Global.System.Data.DataColumn("P0_SInv", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP0_SInv)
            Me.columnP0_SVta = New Global.System.Data.DataColumn("P0_SVta", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP0_SVta)
            Me.columnP0_SNre = New Global.System.Data.DataColumn("P0_SNre", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP0_SNre)
            Me.columnP0_IAntFac = New Global.System.Data.DataColumn("P0_IAntFac", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP0_IAntFac)
            Me.columnP0_CmpFac = New Global.System.Data.DataColumn("P0_CmpFac", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP0_CmpFac)
            Me.columnP0_Precio = New Global.System.Data.DataColumn("P0_Precio", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP0_Precio)
            Me.columnP0_InvFac = New Global.System.Data.DataColumn("P0_InvFac", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP0_InvFac)
            Me.columnP0_VtaFac = New Global.System.Data.DataColumn("P0_VtaFac", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP0_VtaFac)
            Me.columnP0_Regs = New Global.System.Data.DataColumn("P0_Regs", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP0_Regs)
            Me.columnP1_IAntFac = New Global.System.Data.DataColumn("P1_IAntFac", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP1_IAntFac)
            Me.columnP1_CmpFac = New Global.System.Data.DataColumn("P1_CmpFac", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP1_CmpFac)
            Me.columnP1_Precio = New Global.System.Data.DataColumn("P1_Precio", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP1_Precio)
            Me.columnP1_InvFac = New Global.System.Data.DataColumn("P1_InvFac", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP1_InvFac)
            Me.columnP1_VtaFac = New Global.System.Data.DataColumn("P1_VtaFac", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP1_VtaFac)
            Me.columnP1_Regs = New Global.System.Data.DataColumn("P1_Regs", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP1_Regs)
            Me.columnP2_IAntFac = New Global.System.Data.DataColumn("P2_IAntFac", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP2_IAntFac)
            Me.columnP2_CmpFac = New Global.System.Data.DataColumn("P2_CmpFac", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP2_CmpFac)
            Me.columnP2_Precio = New Global.System.Data.DataColumn("P2_Precio", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP2_Precio)
            Me.columnP2_InvFac = New Global.System.Data.DataColumn("P2_InvFac", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP2_InvFac)
            Me.columnP2_VtaFac = New Global.System.Data.DataColumn("P2_VtaFac", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP2_VtaFac)
            Me.columnP2_Regs = New Global.System.Data.DataColumn("P2_Regs", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP2_Regs)
            Me.columnMedicionActual.AllowDBNull = false
            Me.columnCodigoZona.AllowDBNull = false
            Me.columnCanal.AllowDBNull = false
            Me.columnCanal.MaxLength = 400
            Me.columnCategoria.AllowDBNull = false
            Me.columnCategoria.MaxLength = 400
            Me.columnTipoDato.AllowDBNull = false
            Me.columnCodigoProducto.AllowDBNull = false
            Me.columnP0_PCmp.ReadOnly = true
            Me.columnP0_PPre.ReadOnly = true
            Me.columnP0_PInv.ReadOnly = true
            Me.columnP0_PVta.ReadOnly = true
            Me.columnP0_PNre.ReadOnly = true
            Me.columnP0_SFR.ReadOnly = true
            Me.columnP0_SCmp.ReadOnly = true
            Me.columnP0_SPre.ReadOnly = true
            Me.columnP0_SInv.ReadOnly = true
            Me.columnP0_SVta.ReadOnly = true
            Me.columnP0_SNre.ReadOnly = true
            Me.columnP0_VtaFac.ReadOnly = true
            Me.columnP1_VtaFac.ReadOnly = true
            Me.columnP2_VtaFac.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewvCCRCC_GrillaPrincipalPlantilla01Row() As vCCRCC_GrillaPrincipalPlantilla01Row
            Return CType(Me.NewRow,vCCRCC_GrillaPrincipalPlantilla01Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New vCCRCC_GrillaPrincipalPlantilla01Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(vCCRCC_GrillaPrincipalPlantilla01Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.vCCRCC_GrillaPrincipalPlantilla01RowChangedEvent) Is Nothing) Then
                RaiseEvent vCCRCC_GrillaPrincipalPlantilla01RowChanged(Me, New vCCRCC_GrillaPrincipalPlantilla01RowChangeEvent(CType(e.Row,vCCRCC_GrillaPrincipalPlantilla01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.vCCRCC_GrillaPrincipalPlantilla01RowChangingEvent) Is Nothing) Then
                RaiseEvent vCCRCC_GrillaPrincipalPlantilla01RowChanging(Me, New vCCRCC_GrillaPrincipalPlantilla01RowChangeEvent(CType(e.Row,vCCRCC_GrillaPrincipalPlantilla01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.vCCRCC_GrillaPrincipalPlantilla01RowDeletedEvent) Is Nothing) Then
                RaiseEvent vCCRCC_GrillaPrincipalPlantilla01RowDeleted(Me, New vCCRCC_GrillaPrincipalPlantilla01RowChangeEvent(CType(e.Row,vCCRCC_GrillaPrincipalPlantilla01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.vCCRCC_GrillaPrincipalPlantilla01RowDeletingEvent) Is Nothing) Then
                RaiseEvent vCCRCC_GrillaPrincipalPlantilla01RowDeleting(Me, New vCCRCC_GrillaPrincipalPlantilla01RowChangeEvent(CType(e.Row,vCCRCC_GrillaPrincipalPlantilla01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovevCCRCC_GrillaPrincipalPlantilla01Row(ByVal row As vCCRCC_GrillaPrincipalPlantilla01Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As BDPECCRCCDataSet = New BDPECCRCCDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "vCCRCC_GrillaPrincipalPlantilla01DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class vCCRCC_GrillaSecundariaPlantilla01DataTable
        Inherits Global.System.Data.TypedTableBase(Of vCCRCC_GrillaSecundariaPlantilla01Row)
        
        Private columnId As Global.System.Data.DataColumn
        
        Private columnMedicionActual As Global.System.Data.DataColumn
        
        Private columnCodigoZona As Global.System.Data.DataColumn
        
        Private columnCanal As Global.System.Data.DataColumn
        
        Private columnCategoria As Global.System.Data.DataColumn
        
        Private columnNombreComercial As Global.System.Data.DataColumn
        
        Private columnCodigoNegocio As Global.System.Data.DataColumn
        
        Private columnCodigoProducto As Global.System.Data.DataColumn
        
        Private columnTipoDato As Global.System.Data.DataColumn
        
        Private columnP0_PCmp As Global.System.Data.DataColumn
        
        Private columnP0_PPre As Global.System.Data.DataColumn
        
        Private columnP0_PInv As Global.System.Data.DataColumn
        
        Private columnP0_PVta As Global.System.Data.DataColumn
        
        Private columnP0_PNre As Global.System.Data.DataColumn
        
        Private columnP0_SFR As Global.System.Data.DataColumn
        
        Private columnP0_SCmp As Global.System.Data.DataColumn
        
        Private columnP0_SPre As Global.System.Data.DataColumn
        
        Private columnP0_SInv As Global.System.Data.DataColumn
        
        Private columnP0_SVta As Global.System.Data.DataColumn
        
        Private columnP0_SNre As Global.System.Data.DataColumn
        
        Private columnP0_IAntFac As Global.System.Data.DataColumn
        
        Private columnP0_CmpFac As Global.System.Data.DataColumn
        
        Private columnP0_Precio As Global.System.Data.DataColumn
        
        Private columnP0_InvFac As Global.System.Data.DataColumn
        
        Private columnP0_VtaFac As Global.System.Data.DataColumn
        
        Private columnP0_Regs As Global.System.Data.DataColumn
        
        Private columnP1_IAntFac As Global.System.Data.DataColumn
        
        Private columnP1_CmpFac As Global.System.Data.DataColumn
        
        Private columnP1_Precio As Global.System.Data.DataColumn
        
        Private columnP1_InvFac As Global.System.Data.DataColumn
        
        Private columnP1_VtaFac As Global.System.Data.DataColumn
        
        Private columnP1_Regs As Global.System.Data.DataColumn
        
        Private columnP2_IAntFac As Global.System.Data.DataColumn
        
        Private columnP2_CmpFac As Global.System.Data.DataColumn
        
        Private columnP2_Precio As Global.System.Data.DataColumn
        
        Private columnP2_InvFac As Global.System.Data.DataColumn
        
        Private columnP2_VtaFac As Global.System.Data.DataColumn
        
        Private columnP2_Regs As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "vCCRCC_GrillaSecundariaPlantilla01"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IdColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnId
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property MedicionActualColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMedicionActual
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodigoZonaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoZona
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CanalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCanal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CategoriaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCategoria
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property NombreComercialColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNombreComercial
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodigoNegocioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoNegocio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodigoProductoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoProducto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TipoDatoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTipoDato
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P0_PCmpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP0_PCmp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P0_PPreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP0_PPre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P0_PInvColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP0_PInv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P0_PVtaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP0_PVta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P0_PNreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP0_PNre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P0_SFRColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP0_SFR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P0_SCmpColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP0_SCmp
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P0_SPreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP0_SPre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P0_SInvColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP0_SInv
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P0_SVtaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP0_SVta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P0_SNreColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP0_SNre
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P0_IAntFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP0_IAntFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P0_CmpFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP0_CmpFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P0_PrecioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP0_Precio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P0_InvFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP0_InvFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P0_VtaFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP0_VtaFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P0_RegsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP0_Regs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P1_IAntFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP1_IAntFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P1_CmpFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP1_CmpFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P1_PrecioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP1_Precio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P1_InvFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP1_InvFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P1_VtaFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP1_VtaFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P1_RegsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP1_Regs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P2_IAntFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP2_IAntFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P2_CmpFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP2_CmpFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P2_PrecioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP2_Precio
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P2_InvFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP2_InvFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P2_VtaFacColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP2_VtaFac
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property P2_RegsColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnP2_Regs
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As vCCRCC_GrillaSecundariaPlantilla01Row
            Get
                Return CType(Me.Rows(index),vCCRCC_GrillaSecundariaPlantilla01Row)
            End Get
        End Property
        
        Public Event vCCRCC_GrillaSecundariaPlantilla01RowChanging As vCCRCC_GrillaSecundariaPlantilla01RowChangeEventHandler
        
        Public Event vCCRCC_GrillaSecundariaPlantilla01RowChanged As vCCRCC_GrillaSecundariaPlantilla01RowChangeEventHandler
        
        Public Event vCCRCC_GrillaSecundariaPlantilla01RowDeleting As vCCRCC_GrillaSecundariaPlantilla01RowChangeEventHandler
        
        Public Event vCCRCC_GrillaSecundariaPlantilla01RowDeleted As vCCRCC_GrillaSecundariaPlantilla01RowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddvCCRCC_GrillaSecundariaPlantilla01Row(ByVal row As vCCRCC_GrillaSecundariaPlantilla01Row)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddvCCRCC_GrillaSecundariaPlantilla01Row( _
                    ByVal Id As Long,  _
                    ByVal MedicionActual As Integer,  _
                    ByVal CodigoZona As Short,  _
                    ByVal Canal As String,  _
                    ByVal Categoria As String,  _
                    ByVal NombreComercial As String,  _
                    ByVal CodigoNegocio As Integer,  _
                    ByVal CodigoProducto As Short,  _
                    ByVal TipoDato As Byte,  _
                    ByVal P0_PCmp As Decimal,  _
                    ByVal P0_PPre As Integer,  _
                    ByVal P0_PInv As Decimal,  _
                    ByVal P0_PVta As Decimal,  _
                    ByVal P0_PNre As Long,  _
                    ByVal P0_SFR As Decimal,  _
                    ByVal P0_SCmp As Decimal,  _
                    ByVal P0_SPre As Integer,  _
                    ByVal P0_SInv As Decimal,  _
                    ByVal P0_SVta As Decimal,  _
                    ByVal P0_SNre As Long,  _
                    ByVal P0_IAntFac As Decimal,  _
                    ByVal P0_CmpFac As Decimal,  _
                    ByVal P0_Precio As Integer,  _
                    ByVal P0_InvFac As Decimal,  _
                    ByVal P0_VtaFac As Decimal,  _
                    ByVal P0_Regs As Long,  _
                    ByVal P1_IAntFac As Decimal,  _
                    ByVal P1_CmpFac As Decimal,  _
                    ByVal P1_Precio As Integer,  _
                    ByVal P1_InvFac As Decimal,  _
                    ByVal P1_VtaFac As Decimal,  _
                    ByVal P1_Regs As Long,  _
                    ByVal P2_IAntFac As Decimal,  _
                    ByVal P2_CmpFac As Decimal,  _
                    ByVal P2_Precio As Integer,  _
                    ByVal P2_InvFac As Decimal,  _
                    ByVal P2_VtaFac As Decimal,  _
                    ByVal P2_Regs As Long) As vCCRCC_GrillaSecundariaPlantilla01Row
            Dim rowvCCRCC_GrillaSecundariaPlantilla01Row As vCCRCC_GrillaSecundariaPlantilla01Row = CType(Me.NewRow,vCCRCC_GrillaSecundariaPlantilla01Row)
            Dim columnValuesArray() As Object = New Object() {Id, MedicionActual, CodigoZona, Canal, Categoria, NombreComercial, CodigoNegocio, CodigoProducto, TipoDato, P0_PCmp, P0_PPre, P0_PInv, P0_PVta, P0_PNre, P0_SFR, P0_SCmp, P0_SPre, P0_SInv, P0_SVta, P0_SNre, P0_IAntFac, P0_CmpFac, P0_Precio, P0_InvFac, P0_VtaFac, P0_Regs, P1_IAntFac, P1_CmpFac, P1_Precio, P1_InvFac, P1_VtaFac, P1_Regs, P2_IAntFac, P2_CmpFac, P2_Precio, P2_InvFac, P2_VtaFac, P2_Regs}
            rowvCCRCC_GrillaSecundariaPlantilla01Row.ItemArray = columnValuesArray
            Me.Rows.Add(rowvCCRCC_GrillaSecundariaPlantilla01Row)
            Return rowvCCRCC_GrillaSecundariaPlantilla01Row
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As vCCRCC_GrillaSecundariaPlantilla01DataTable = CType(MyBase.Clone,vCCRCC_GrillaSecundariaPlantilla01DataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New vCCRCC_GrillaSecundariaPlantilla01DataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnId = MyBase.Columns("Id")
            Me.columnMedicionActual = MyBase.Columns("MedicionActual")
            Me.columnCodigoZona = MyBase.Columns("CodigoZona")
            Me.columnCanal = MyBase.Columns("Canal")
            Me.columnCategoria = MyBase.Columns("Categoria")
            Me.columnNombreComercial = MyBase.Columns("NombreComercial")
            Me.columnCodigoNegocio = MyBase.Columns("CodigoNegocio")
            Me.columnCodigoProducto = MyBase.Columns("CodigoProducto")
            Me.columnTipoDato = MyBase.Columns("TipoDato")
            Me.columnP0_PCmp = MyBase.Columns("P0_PCmp")
            Me.columnP0_PPre = MyBase.Columns("P0_PPre")
            Me.columnP0_PInv = MyBase.Columns("P0_PInv")
            Me.columnP0_PVta = MyBase.Columns("P0_PVta")
            Me.columnP0_PNre = MyBase.Columns("P0_PNre")
            Me.columnP0_SFR = MyBase.Columns("P0_SFR")
            Me.columnP0_SCmp = MyBase.Columns("P0_SCmp")
            Me.columnP0_SPre = MyBase.Columns("P0_SPre")
            Me.columnP0_SInv = MyBase.Columns("P0_SInv")
            Me.columnP0_SVta = MyBase.Columns("P0_SVta")
            Me.columnP0_SNre = MyBase.Columns("P0_SNre")
            Me.columnP0_IAntFac = MyBase.Columns("P0_IAntFac")
            Me.columnP0_CmpFac = MyBase.Columns("P0_CmpFac")
            Me.columnP0_Precio = MyBase.Columns("P0_Precio")
            Me.columnP0_InvFac = MyBase.Columns("P0_InvFac")
            Me.columnP0_VtaFac = MyBase.Columns("P0_VtaFac")
            Me.columnP0_Regs = MyBase.Columns("P0_Regs")
            Me.columnP1_IAntFac = MyBase.Columns("P1_IAntFac")
            Me.columnP1_CmpFac = MyBase.Columns("P1_CmpFac")
            Me.columnP1_Precio = MyBase.Columns("P1_Precio")
            Me.columnP1_InvFac = MyBase.Columns("P1_InvFac")
            Me.columnP1_VtaFac = MyBase.Columns("P1_VtaFac")
            Me.columnP1_Regs = MyBase.Columns("P1_Regs")
            Me.columnP2_IAntFac = MyBase.Columns("P2_IAntFac")
            Me.columnP2_CmpFac = MyBase.Columns("P2_CmpFac")
            Me.columnP2_Precio = MyBase.Columns("P2_Precio")
            Me.columnP2_InvFac = MyBase.Columns("P2_InvFac")
            Me.columnP2_VtaFac = MyBase.Columns("P2_VtaFac")
            Me.columnP2_Regs = MyBase.Columns("P2_Regs")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnId = New Global.System.Data.DataColumn("Id", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnId)
            Me.columnMedicionActual = New Global.System.Data.DataColumn("MedicionActual", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMedicionActual)
            Me.columnCodigoZona = New Global.System.Data.DataColumn("CodigoZona", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoZona)
            Me.columnCanal = New Global.System.Data.DataColumn("Canal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCanal)
            Me.columnCategoria = New Global.System.Data.DataColumn("Categoria", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCategoria)
            Me.columnNombreComercial = New Global.System.Data.DataColumn("NombreComercial", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNombreComercial)
            Me.columnCodigoNegocio = New Global.System.Data.DataColumn("CodigoNegocio", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoNegocio)
            Me.columnCodigoProducto = New Global.System.Data.DataColumn("CodigoProducto", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoProducto)
            Me.columnTipoDato = New Global.System.Data.DataColumn("TipoDato", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTipoDato)
            Me.columnP0_PCmp = New Global.System.Data.DataColumn("P0_PCmp", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP0_PCmp)
            Me.columnP0_PPre = New Global.System.Data.DataColumn("P0_PPre", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP0_PPre)
            Me.columnP0_PInv = New Global.System.Data.DataColumn("P0_PInv", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP0_PInv)
            Me.columnP0_PVta = New Global.System.Data.DataColumn("P0_PVta", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP0_PVta)
            Me.columnP0_PNre = New Global.System.Data.DataColumn("P0_PNre", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP0_PNre)
            Me.columnP0_SFR = New Global.System.Data.DataColumn("P0_SFR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP0_SFR)
            Me.columnP0_SCmp = New Global.System.Data.DataColumn("P0_SCmp", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP0_SCmp)
            Me.columnP0_SPre = New Global.System.Data.DataColumn("P0_SPre", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP0_SPre)
            Me.columnP0_SInv = New Global.System.Data.DataColumn("P0_SInv", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP0_SInv)
            Me.columnP0_SVta = New Global.System.Data.DataColumn("P0_SVta", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP0_SVta)
            Me.columnP0_SNre = New Global.System.Data.DataColumn("P0_SNre", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP0_SNre)
            Me.columnP0_IAntFac = New Global.System.Data.DataColumn("P0_IAntFac", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP0_IAntFac)
            Me.columnP0_CmpFac = New Global.System.Data.DataColumn("P0_CmpFac", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP0_CmpFac)
            Me.columnP0_Precio = New Global.System.Data.DataColumn("P0_Precio", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP0_Precio)
            Me.columnP0_InvFac = New Global.System.Data.DataColumn("P0_InvFac", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP0_InvFac)
            Me.columnP0_VtaFac = New Global.System.Data.DataColumn("P0_VtaFac", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP0_VtaFac)
            Me.columnP0_Regs = New Global.System.Data.DataColumn("P0_Regs", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP0_Regs)
            Me.columnP1_IAntFac = New Global.System.Data.DataColumn("P1_IAntFac", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP1_IAntFac)
            Me.columnP1_CmpFac = New Global.System.Data.DataColumn("P1_CmpFac", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP1_CmpFac)
            Me.columnP1_Precio = New Global.System.Data.DataColumn("P1_Precio", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP1_Precio)
            Me.columnP1_InvFac = New Global.System.Data.DataColumn("P1_InvFac", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP1_InvFac)
            Me.columnP1_VtaFac = New Global.System.Data.DataColumn("P1_VtaFac", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP1_VtaFac)
            Me.columnP1_Regs = New Global.System.Data.DataColumn("P1_Regs", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP1_Regs)
            Me.columnP2_IAntFac = New Global.System.Data.DataColumn("P2_IAntFac", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP2_IAntFac)
            Me.columnP2_CmpFac = New Global.System.Data.DataColumn("P2_CmpFac", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP2_CmpFac)
            Me.columnP2_Precio = New Global.System.Data.DataColumn("P2_Precio", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP2_Precio)
            Me.columnP2_InvFac = New Global.System.Data.DataColumn("P2_InvFac", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP2_InvFac)
            Me.columnP2_VtaFac = New Global.System.Data.DataColumn("P2_VtaFac", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP2_VtaFac)
            Me.columnP2_Regs = New Global.System.Data.DataColumn("P2_Regs", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnP2_Regs)
            Me.columnMedicionActual.AllowDBNull = false
            Me.columnCodigoZona.AllowDBNull = false
            Me.columnCanal.AllowDBNull = false
            Me.columnCanal.MaxLength = 400
            Me.columnCategoria.AllowDBNull = false
            Me.columnCategoria.MaxLength = 400
            Me.columnNombreComercial.ReadOnly = true
            Me.columnNombreComercial.MaxLength = 111
            Me.columnCodigoNegocio.AllowDBNull = false
            Me.columnCodigoProducto.AllowDBNull = false
            Me.columnTipoDato.AllowDBNull = false
            Me.columnP0_PCmp.ReadOnly = true
            Me.columnP0_PPre.ReadOnly = true
            Me.columnP0_PInv.ReadOnly = true
            Me.columnP0_PVta.ReadOnly = true
            Me.columnP0_PNre.ReadOnly = true
            Me.columnP0_SFR.ReadOnly = true
            Me.columnP0_SCmp.ReadOnly = true
            Me.columnP0_SPre.ReadOnly = true
            Me.columnP0_SInv.ReadOnly = true
            Me.columnP0_SVta.ReadOnly = true
            Me.columnP0_SNre.ReadOnly = true
            Me.columnP0_VtaFac.ReadOnly = true
            Me.columnP1_VtaFac.ReadOnly = true
            Me.columnP2_VtaFac.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewvCCRCC_GrillaSecundariaPlantilla01Row() As vCCRCC_GrillaSecundariaPlantilla01Row
            Return CType(Me.NewRow,vCCRCC_GrillaSecundariaPlantilla01Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New vCCRCC_GrillaSecundariaPlantilla01Row(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(vCCRCC_GrillaSecundariaPlantilla01Row)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.vCCRCC_GrillaSecundariaPlantilla01RowChangedEvent) Is Nothing) Then
                RaiseEvent vCCRCC_GrillaSecundariaPlantilla01RowChanged(Me, New vCCRCC_GrillaSecundariaPlantilla01RowChangeEvent(CType(e.Row,vCCRCC_GrillaSecundariaPlantilla01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.vCCRCC_GrillaSecundariaPlantilla01RowChangingEvent) Is Nothing) Then
                RaiseEvent vCCRCC_GrillaSecundariaPlantilla01RowChanging(Me, New vCCRCC_GrillaSecundariaPlantilla01RowChangeEvent(CType(e.Row,vCCRCC_GrillaSecundariaPlantilla01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.vCCRCC_GrillaSecundariaPlantilla01RowDeletedEvent) Is Nothing) Then
                RaiseEvent vCCRCC_GrillaSecundariaPlantilla01RowDeleted(Me, New vCCRCC_GrillaSecundariaPlantilla01RowChangeEvent(CType(e.Row,vCCRCC_GrillaSecundariaPlantilla01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.vCCRCC_GrillaSecundariaPlantilla01RowDeletingEvent) Is Nothing) Then
                RaiseEvent vCCRCC_GrillaSecundariaPlantilla01RowDeleting(Me, New vCCRCC_GrillaSecundariaPlantilla01RowChangeEvent(CType(e.Row,vCCRCC_GrillaSecundariaPlantilla01Row), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemovevCCRCC_GrillaSecundariaPlantilla01Row(ByVal row As vCCRCC_GrillaSecundariaPlantilla01Row)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As BDPECCRCCDataSet = New BDPECCRCCDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "vCCRCC_GrillaSecundariaPlantilla01DataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class XXXPCCRCC_Indicadores_SelDataTable
        Inherits Global.System.Data.TypedTableBase(Of XXXPCCRCC_Indicadores_SelRow)
        
        Private columnGrupoTitulo As Global.System.Data.DataColumn
        
        Private columnIdIndicador As Global.System.Data.DataColumn
        
        Private columnTituloIndicador As Global.System.Data.DataColumn
        
        Private columnALERTA_0 As Global.System.Data.DataColumn
        
        Private columnALERTA_1 As Global.System.Data.DataColumn
        
        Private columnALERTA_2 As Global.System.Data.DataColumn
        
        Private columnALERTA_3 As Global.System.Data.DataColumn
        
        Private columnALERTA_4 As Global.System.Data.DataColumn
        
        Private columnDescripcion As Global.System.Data.DataColumn
        
        Private columnTituloIndicadorPrincipal As Global.System.Data.DataColumn
        
        Private columnTituloIndicadorSecundario As Global.System.Data.DataColumn
        
        Private columnEstadoUIPageGroupButton As Global.System.Data.DataColumn
        
        Private columnSPPrincipal As Global.System.Data.DataColumn
        
        Private columnSPSecundario As Global.System.Data.DataColumn
        
        Private columnXMLGridPrincipal As Global.System.Data.DataColumn
        
        Private columnXMLGridSecundario As Global.System.Data.DataColumn
        
        Private columnfrmPlantilla As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "XXXPCCRCC_Indicadores_Sel"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property GrupoTituloColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnGrupoTitulo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property IdIndicadorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIdIndicador
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TituloIndicadorColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTituloIndicador
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ALERTA_0Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnALERTA_0
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ALERTA_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnALERTA_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ALERTA_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnALERTA_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ALERTA_3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnALERTA_3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ALERTA_4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnALERTA_4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property DescripcionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescripcion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TituloIndicadorPrincipalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTituloIndicadorPrincipal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property TituloIndicadorSecundarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTituloIndicadorSecundario
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property EstadoUIPageGroupButtonColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEstadoUIPageGroupButton
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SPPrincipalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPPrincipal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property SPSecundarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSPSecundario
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property XMLGridPrincipalColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXMLGridPrincipal
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property XMLGridSecundarioColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnXMLGridSecundario
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property frmPlantillaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnfrmPlantilla
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As XXXPCCRCC_Indicadores_SelRow
            Get
                Return CType(Me.Rows(index),XXXPCCRCC_Indicadores_SelRow)
            End Get
        End Property
        
        Public Event XXXPCCRCC_Indicadores_SelRowChanging As XXXPCCRCC_Indicadores_SelRowChangeEventHandler
        
        Public Event XXXPCCRCC_Indicadores_SelRowChanged As XXXPCCRCC_Indicadores_SelRowChangeEventHandler
        
        Public Event XXXPCCRCC_Indicadores_SelRowDeleting As XXXPCCRCC_Indicadores_SelRowChangeEventHandler
        
        Public Event XXXPCCRCC_Indicadores_SelRowDeleted As XXXPCCRCC_Indicadores_SelRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddXXXPCCRCC_Indicadores_SelRow(ByVal row As XXXPCCRCC_Indicadores_SelRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddXXXPCCRCC_Indicadores_SelRow( _
                    ByVal GrupoTitulo As String,  _
                    ByVal IdIndicador As Short,  _
                    ByVal TituloIndicador As String,  _
                    ByVal ALERTA_0 As Integer,  _
                    ByVal ALERTA_1 As Integer,  _
                    ByVal ALERTA_2 As Integer,  _
                    ByVal ALERTA_3 As Integer,  _
                    ByVal ALERTA_4 As Integer,  _
                    ByVal Descripcion As String,  _
                    ByVal TituloIndicadorPrincipal As String,  _
                    ByVal TituloIndicadorSecundario As String,  _
                    ByVal EstadoUIPageGroupButton As String,  _
                    ByVal SPPrincipal As String,  _
                    ByVal SPSecundario As String,  _
                    ByVal XMLGridPrincipal As String,  _
                    ByVal XMLGridSecundario As String,  _
                    ByVal frmPlantilla As String) As XXXPCCRCC_Indicadores_SelRow
            Dim rowXXXPCCRCC_Indicadores_SelRow As XXXPCCRCC_Indicadores_SelRow = CType(Me.NewRow,XXXPCCRCC_Indicadores_SelRow)
            Dim columnValuesArray() As Object = New Object() {GrupoTitulo, IdIndicador, TituloIndicador, ALERTA_0, ALERTA_1, ALERTA_2, ALERTA_3, ALERTA_4, Descripcion, TituloIndicadorPrincipal, TituloIndicadorSecundario, EstadoUIPageGroupButton, SPPrincipal, SPSecundario, XMLGridPrincipal, XMLGridSecundario, frmPlantilla}
            rowXXXPCCRCC_Indicadores_SelRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowXXXPCCRCC_Indicadores_SelRow)
            Return rowXXXPCCRCC_Indicadores_SelRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As XXXPCCRCC_Indicadores_SelDataTable = CType(MyBase.Clone,XXXPCCRCC_Indicadores_SelDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New XXXPCCRCC_Indicadores_SelDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnGrupoTitulo = MyBase.Columns("GrupoTitulo")
            Me.columnIdIndicador = MyBase.Columns("IdIndicador")
            Me.columnTituloIndicador = MyBase.Columns("TituloIndicador")
            Me.columnALERTA_0 = MyBase.Columns("ALERTA_0")
            Me.columnALERTA_1 = MyBase.Columns("ALERTA_1")
            Me.columnALERTA_2 = MyBase.Columns("ALERTA_2")
            Me.columnALERTA_3 = MyBase.Columns("ALERTA_3")
            Me.columnALERTA_4 = MyBase.Columns("ALERTA_4")
            Me.columnDescripcion = MyBase.Columns("Descripcion")
            Me.columnTituloIndicadorPrincipal = MyBase.Columns("TituloIndicadorPrincipal")
            Me.columnTituloIndicadorSecundario = MyBase.Columns("TituloIndicadorSecundario")
            Me.columnEstadoUIPageGroupButton = MyBase.Columns("EstadoUIPageGroupButton")
            Me.columnSPPrincipal = MyBase.Columns("SPPrincipal")
            Me.columnSPSecundario = MyBase.Columns("SPSecundario")
            Me.columnXMLGridPrincipal = MyBase.Columns("XMLGridPrincipal")
            Me.columnXMLGridSecundario = MyBase.Columns("XMLGridSecundario")
            Me.columnfrmPlantilla = MyBase.Columns("frmPlantilla")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnGrupoTitulo = New Global.System.Data.DataColumn("GrupoTitulo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnGrupoTitulo)
            Me.columnIdIndicador = New Global.System.Data.DataColumn("IdIndicador", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIdIndicador)
            Me.columnTituloIndicador = New Global.System.Data.DataColumn("TituloIndicador", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTituloIndicador)
            Me.columnALERTA_0 = New Global.System.Data.DataColumn("ALERTA_0", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnALERTA_0)
            Me.columnALERTA_1 = New Global.System.Data.DataColumn("ALERTA_1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnALERTA_1)
            Me.columnALERTA_2 = New Global.System.Data.DataColumn("ALERTA_2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnALERTA_2)
            Me.columnALERTA_3 = New Global.System.Data.DataColumn("ALERTA_3", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnALERTA_3)
            Me.columnALERTA_4 = New Global.System.Data.DataColumn("ALERTA_4", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnALERTA_4)
            Me.columnDescripcion = New Global.System.Data.DataColumn("Descripcion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescripcion)
            Me.columnTituloIndicadorPrincipal = New Global.System.Data.DataColumn("TituloIndicadorPrincipal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTituloIndicadorPrincipal)
            Me.columnTituloIndicadorSecundario = New Global.System.Data.DataColumn("TituloIndicadorSecundario", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTituloIndicadorSecundario)
            Me.columnEstadoUIPageGroupButton = New Global.System.Data.DataColumn("EstadoUIPageGroupButton", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEstadoUIPageGroupButton)
            Me.columnSPPrincipal = New Global.System.Data.DataColumn("SPPrincipal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPPrincipal)
            Me.columnSPSecundario = New Global.System.Data.DataColumn("SPSecundario", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSPSecundario)
            Me.columnXMLGridPrincipal = New Global.System.Data.DataColumn("XMLGridPrincipal", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXMLGridPrincipal)
            Me.columnXMLGridSecundario = New Global.System.Data.DataColumn("XMLGridSecundario", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnXMLGridSecundario)
            Me.columnfrmPlantilla = New Global.System.Data.DataColumn("frmPlantilla", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnfrmPlantilla)
            Me.columnGrupoTitulo.MaxLength = 50
            Me.columnIdIndicador.AllowDBNull = false
            Me.columnTituloIndicador.MaxLength = 50
            Me.columnDescripcion.MaxLength = 80
            Me.columnTituloIndicadorPrincipal.MaxLength = 50
            Me.columnTituloIndicadorSecundario.MaxLength = 50
            Me.columnEstadoUIPageGroupButton.MaxLength = 100
            Me.columnSPPrincipal.MaxLength = 100
            Me.columnSPSecundario.MaxLength = 100
            Me.columnXMLGridPrincipal.MaxLength = 2147483647
            Me.columnXMLGridSecundario.MaxLength = 2147483647
            Me.columnfrmPlantilla.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewXXXPCCRCC_Indicadores_SelRow() As XXXPCCRCC_Indicadores_SelRow
            Return CType(Me.NewRow,XXXPCCRCC_Indicadores_SelRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New XXXPCCRCC_Indicadores_SelRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(XXXPCCRCC_Indicadores_SelRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.XXXPCCRCC_Indicadores_SelRowChangedEvent) Is Nothing) Then
                RaiseEvent XXXPCCRCC_Indicadores_SelRowChanged(Me, New XXXPCCRCC_Indicadores_SelRowChangeEvent(CType(e.Row,XXXPCCRCC_Indicadores_SelRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.XXXPCCRCC_Indicadores_SelRowChangingEvent) Is Nothing) Then
                RaiseEvent XXXPCCRCC_Indicadores_SelRowChanging(Me, New XXXPCCRCC_Indicadores_SelRowChangeEvent(CType(e.Row,XXXPCCRCC_Indicadores_SelRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.XXXPCCRCC_Indicadores_SelRowDeletedEvent) Is Nothing) Then
                RaiseEvent XXXPCCRCC_Indicadores_SelRowDeleted(Me, New XXXPCCRCC_Indicadores_SelRowChangeEvent(CType(e.Row,XXXPCCRCC_Indicadores_SelRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.XXXPCCRCC_Indicadores_SelRowDeletingEvent) Is Nothing) Then
                RaiseEvent XXXPCCRCC_Indicadores_SelRowDeleting(Me, New XXXPCCRCC_Indicadores_SelRowChangeEvent(CType(e.Row,XXXPCCRCC_Indicadores_SelRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveXXXPCCRCC_Indicadores_SelRow(ByVal row As XXXPCCRCC_Indicadores_SelRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As BDPECCRCCDataSet = New BDPECCRCCDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "XXXPCCRCC_Indicadores_SelDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class XXXPCCRCC_PCCategorias_SelDataTable
        Inherits Global.System.Data.TypedTableBase(Of XXXPCCRCC_PCCategorias_SelRow)
        
        Private columnCategoria As Global.System.Data.DataColumn
        
        Private columnCodigoProducto As Global.System.Data.DataColumn
        
        Private columnALERTA_0 As Global.System.Data.DataColumn
        
        Private columnALERTA_1 As Global.System.Data.DataColumn
        
        Private columnALERTA_2 As Global.System.Data.DataColumn
        
        Private columnALERTA_3 As Global.System.Data.DataColumn
        
        Private columnALERTA_4 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "XXXPCCRCC_PCCategorias_Sel"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CategoriaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCategoria
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property CodigoProductoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigoProducto
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ALERTA_0Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnALERTA_0
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ALERTA_1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnALERTA_1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ALERTA_2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnALERTA_2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ALERTA_3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnALERTA_3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property ALERTA_4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnALERTA_4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As XXXPCCRCC_PCCategorias_SelRow
            Get
                Return CType(Me.Rows(index),XXXPCCRCC_PCCategorias_SelRow)
            End Get
        End Property
        
        Public Event XXXPCCRCC_PCCategorias_SelRowChanging As XXXPCCRCC_PCCategorias_SelRowChangeEventHandler
        
        Public Event XXXPCCRCC_PCCategorias_SelRowChanged As XXXPCCRCC_PCCategorias_SelRowChangeEventHandler
        
        Public Event XXXPCCRCC_PCCategorias_SelRowDeleting As XXXPCCRCC_PCCategorias_SelRowChangeEventHandler
        
        Public Event XXXPCCRCC_PCCategorias_SelRowDeleted As XXXPCCRCC_PCCategorias_SelRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Sub AddXXXPCCRCC_PCCategorias_SelRow(ByVal row As XXXPCCRCC_PCCategorias_SelRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overloads Function AddXXXPCCRCC_PCCategorias_SelRow(ByVal Categoria As String, ByVal CodigoProducto As Short, ByVal ALERTA_0 As Integer, ByVal ALERTA_1 As Integer, ByVal ALERTA_2 As Integer, ByVal ALERTA_3 As Integer, ByVal ALERTA_4 As Integer) As XXXPCCRCC_PCCategorias_SelRow
            Dim rowXXXPCCRCC_PCCategorias_SelRow As XXXPCCRCC_PCCategorias_SelRow = CType(Me.NewRow,XXXPCCRCC_PCCategorias_SelRow)
            Dim columnValuesArray() As Object = New Object() {Categoria, CodigoProducto, ALERTA_0, ALERTA_1, ALERTA_2, ALERTA_3, ALERTA_4}
            rowXXXPCCRCC_PCCategorias_SelRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowXXXPCCRCC_PCCategorias_SelRow)
            Return rowXXXPCCRCC_PCCategorias_SelRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As XXXPCCRCC_PCCategorias_SelDataTable = CType(MyBase.Clone,XXXPCCRCC_PCCategorias_SelDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New XXXPCCRCC_PCCategorias_SelDataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub InitVars()
            Me.columnCategoria = MyBase.Columns("Categoria")
            Me.columnCodigoProducto = MyBase.Columns("CodigoProducto")
            Me.columnALERTA_0 = MyBase.Columns("ALERTA_0")
            Me.columnALERTA_1 = MyBase.Columns("ALERTA_1")
            Me.columnALERTA_2 = MyBase.Columns("ALERTA_2")
            Me.columnALERTA_3 = MyBase.Columns("ALERTA_3")
            Me.columnALERTA_4 = MyBase.Columns("ALERTA_4")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitClass()
            Me.columnCategoria = New Global.System.Data.DataColumn("Categoria", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCategoria)
            Me.columnCodigoProducto = New Global.System.Data.DataColumn("CodigoProducto", GetType(Short), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigoProducto)
            Me.columnALERTA_0 = New Global.System.Data.DataColumn("ALERTA_0", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnALERTA_0)
            Me.columnALERTA_1 = New Global.System.Data.DataColumn("ALERTA_1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnALERTA_1)
            Me.columnALERTA_2 = New Global.System.Data.DataColumn("ALERTA_2", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnALERTA_2)
            Me.columnALERTA_3 = New Global.System.Data.DataColumn("ALERTA_3", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnALERTA_3)
            Me.columnALERTA_4 = New Global.System.Data.DataColumn("ALERTA_4", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnALERTA_4)
            Me.columnCategoria.AllowDBNull = false
            Me.columnCategoria.MaxLength = 40
            Me.columnCodigoProducto.AllowDBNull = false
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function NewXXXPCCRCC_PCCategorias_SelRow() As XXXPCCRCC_PCCategorias_SelRow
            Return CType(Me.NewRow,XXXPCCRCC_PCCategorias_SelRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New XXXPCCRCC_PCCategorias_SelRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(XXXPCCRCC_PCCategorias_SelRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.XXXPCCRCC_PCCategorias_SelRowChangedEvent) Is Nothing) Then
                RaiseEvent XXXPCCRCC_PCCategorias_SelRowChanged(Me, New XXXPCCRCC_PCCategorias_SelRowChangeEvent(CType(e.Row,XXXPCCRCC_PCCategorias_SelRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.XXXPCCRCC_PCCategorias_SelRowChangingEvent) Is Nothing) Then
                RaiseEvent XXXPCCRCC_PCCategorias_SelRowChanging(Me, New XXXPCCRCC_PCCategorias_SelRowChangeEvent(CType(e.Row,XXXPCCRCC_PCCategorias_SelRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.XXXPCCRCC_PCCategorias_SelRowDeletedEvent) Is Nothing) Then
                RaiseEvent XXXPCCRCC_PCCategorias_SelRowDeleted(Me, New XXXPCCRCC_PCCategorias_SelRowChangeEvent(CType(e.Row,XXXPCCRCC_PCCategorias_SelRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.XXXPCCRCC_PCCategorias_SelRowDeletingEvent) Is Nothing) Then
                RaiseEvent XXXPCCRCC_PCCategorias_SelRowDeleting(Me, New XXXPCCRCC_PCCategorias_SelRowChangeEvent(CType(e.Row,XXXPCCRCC_PCCategorias_SelRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub RemoveXXXPCCRCC_PCCategorias_SelRow(ByVal row As XXXPCCRCC_PCCategorias_SelRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence
            Dim ds As BDPECCRCCDataSet = New BDPECCRCCDataSet
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "XXXPCCRCC_PCCategorias_SelDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class XXXPCCRCC_DatosPantillaRES01Row
        Inherits Global.System.Data.DataRow
        
        Private tableXXXPCCRCC_DatosPantillaRES01 As XXXPCCRCC_DatosPantillaRES01DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableXXXPCCRCC_DatosPantillaRES01 = CType(Me.Table,XXXPCCRCC_DatosPantillaRES01DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Id() As Integer
            Get
                Return CType(Me(Me.tableXXXPCCRCC_DatosPantillaRES01.IdColumn),Integer)
            End Get
            Set
                Me(Me.tableXXXPCCRCC_DatosPantillaRES01.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Canal() As String
            Get
                Return CType(Me(Me.tableXXXPCCRCC_DatosPantillaRES01.CanalColumn),String)
            End Get
            Set
                Me(Me.tableXXXPCCRCC_DatosPantillaRES01.CanalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Categoria() As String
            Get
                Return CType(Me(Me.tableXXXPCCRCC_DatosPantillaRES01.CategoriaColumn),String)
            End Get
            Set
                Me(Me.tableXXXPCCRCC_DatosPantillaRES01.CategoriaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CCVNTA() As Decimal
            Get
                Return CType(Me(Me.tableXXXPCCRCC_DatosPantillaRES01.CCVNTAColumn),Decimal)
            End Get
            Set
                Me(Me.tableXXXPCCRCC_DatosPantillaRES01.CCVNTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CodigoProducto() As Short
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_DatosPantillaRES01.CodigoProductoColumn),Short)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CodigoProducto' de la tabla 'XXXPCCRCC_DatosPantillaRES01"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_DatosPantillaRES01.CodigoProductoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Frecuencia() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_DatosPantillaRES01.FrecuenciaColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Frecuencia' de la tabla 'XXXPCCRCC_DatosPantillaRES01' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_DatosPantillaRES01.FrecuenciaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TipoDato() As Byte
            Get
                Return CType(Me(Me.tableXXXPCCRCC_DatosPantillaRES01.TipoDatoColumn),Byte)
            End Get
            Set
                Me(Me.tableXXXPCCRCC_DatosPantillaRES01.TipoDatoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Periodo() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_DatosPantillaRES01.PeriodoColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Periodo' de la tabla 'XXXPCCRCC_DatosPantillaRES01' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_DatosPantillaRES01.PeriodoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Etiqueta() As String
            Get
                Return CType(Me(Me.tableXXXPCCRCC_DatosPantillaRES01.EtiquetaColumn),String)
            End Get
            Set
                Me(Me.tableXXXPCCRCC_DatosPantillaRES01.EtiquetaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IAntFac() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_DatosPantillaRES01.IAntFacColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'IAntFac' de la tabla 'XXXPCCRCC_DatosPantillaRES01' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_DatosPantillaRES01.IAntFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CmpFac() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_DatosPantillaRES01.CmpFacColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CmpFac' de la tabla 'XXXPCCRCC_DatosPantillaRES01' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_DatosPantillaRES01.CmpFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property InvFac() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_DatosPantillaRES01.InvFacColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'InvFac' de la tabla 'XXXPCCRCC_DatosPantillaRES01' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_DatosPantillaRES01.InvFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Pre() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_DatosPantillaRES01.PreColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Pre' de la tabla 'XXXPCCRCC_DatosPantillaRES01' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_DatosPantillaRES01.PreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property VtaFac() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_DatosPantillaRES01.VtaFacColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'VtaFac' de la tabla 'XXXPCCRCC_DatosPantillaRES01' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_DatosPantillaRES01.VtaFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Tot() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_DatosPantillaRES01.TotColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Tot' de la tabla 'XXXPCCRCC_DatosPantillaRES01' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_DatosPantillaRES01.TotColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Title() As String
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_DatosPantillaRES01.TitleColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Title' de la tabla 'XXXPCCRCC_DatosPantillaRES01' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_DatosPantillaRES01.TitleColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property FirstName() As String
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_DatosPantillaRES01.FirstNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'FirstName' de la tabla 'XXXPCCRCC_DatosPantillaRES01' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_DatosPantillaRES01.FirstNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MiddleName() As String
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_DatosPantillaRES01.MiddleNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'MiddleName' de la tabla 'XXXPCCRCC_DatosPantillaRES01' es"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_DatosPantillaRES01.MiddleNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property LastName() As String
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_DatosPantillaRES01.LastNameColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'LastName' de la tabla 'XXXPCCRCC_DatosPantillaRES01' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_DatosPantillaRES01.LastNameColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EmailAddress() As String
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_DatosPantillaRES01.EmailAddressColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EmailAddress' de la tabla 'XXXPCCRCC_DatosPantillaRES01' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_DatosPantillaRES01.EmailAddressColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCodigoProductoNull() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_DatosPantillaRES01.CodigoProductoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCodigoProductoNull()
            Me(Me.tableXXXPCCRCC_DatosPantillaRES01.CodigoProductoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFrecuenciaNull() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_DatosPantillaRES01.FrecuenciaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFrecuenciaNull()
            Me(Me.tableXXXPCCRCC_DatosPantillaRES01.FrecuenciaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPeriodoNull() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_DatosPantillaRES01.PeriodoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPeriodoNull()
            Me(Me.tableXXXPCCRCC_DatosPantillaRES01.PeriodoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIAntFacNull() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_DatosPantillaRES01.IAntFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIAntFacNull()
            Me(Me.tableXXXPCCRCC_DatosPantillaRES01.IAntFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsCmpFacNull() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_DatosPantillaRES01.CmpFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetCmpFacNull()
            Me(Me.tableXXXPCCRCC_DatosPantillaRES01.CmpFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsInvFacNull() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_DatosPantillaRES01.InvFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetInvFacNull()
            Me(Me.tableXXXPCCRCC_DatosPantillaRES01.InvFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsPreNull() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_DatosPantillaRES01.PreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetPreNull()
            Me(Me.tableXXXPCCRCC_DatosPantillaRES01.PreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsVtaFacNull() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_DatosPantillaRES01.VtaFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetVtaFacNull()
            Me(Me.tableXXXPCCRCC_DatosPantillaRES01.VtaFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTotNull() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_DatosPantillaRES01.TotColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTotNull()
            Me(Me.tableXXXPCCRCC_DatosPantillaRES01.TotColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTitleNull() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_DatosPantillaRES01.TitleColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTitleNull()
            Me(Me.tableXXXPCCRCC_DatosPantillaRES01.TitleColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsFirstNameNull() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_DatosPantillaRES01.FirstNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetFirstNameNull()
            Me(Me.tableXXXPCCRCC_DatosPantillaRES01.FirstNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsMiddleNameNull() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_DatosPantillaRES01.MiddleNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetMiddleNameNull()
            Me(Me.tableXXXPCCRCC_DatosPantillaRES01.MiddleNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsLastNameNull() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_DatosPantillaRES01.LastNameColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetLastNameNull()
            Me(Me.tableXXXPCCRCC_DatosPantillaRES01.LastNameColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEmailAddressNull() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_DatosPantillaRES01.EmailAddressColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEmailAddressNull()
            Me(Me.tableXXXPCCRCC_DatosPantillaRES01.EmailAddressColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class vCCRCC_GrillaPrincipalPlantilla01Row
        Inherits Global.System.Data.DataRow
        
        Private tablevCCRCC_GrillaPrincipalPlantilla01 As vCCRCC_GrillaPrincipalPlantilla01DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablevCCRCC_GrillaPrincipalPlantilla01 = CType(Me.Table,vCCRCC_GrillaPrincipalPlantilla01DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Id() As Long
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.IdColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Id' de la tabla 'vCCRCC_GrillaPrincipalPlantilla01' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MedicionActual() As Integer
            Get
                Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.MedicionActualColumn),Integer)
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.MedicionActualColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CodigoZona() As Short
            Get
                Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.CodigoZonaColumn),Short)
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.CodigoZonaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Canal() As String
            Get
                Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.CanalColumn),String)
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.CanalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Categoria() As String
            Get
                Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.CategoriaColumn),String)
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.CategoriaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TipoDato() As Byte
            Get
                Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.TipoDatoColumn),Byte)
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.TipoDatoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CodigoProducto() As Short
            Get
                Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.CodigoProductoColumn),Short)
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.CodigoProductoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P0_PCmp() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_PCmpColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P0_PCmp' de la tabla 'vCCRCC_GrillaPrincipalPlantilla01' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_PCmpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P0_PPre() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_PPreColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P0_PPre' de la tabla 'vCCRCC_GrillaPrincipalPlantilla01' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_PPreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P0_PInv() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_PInvColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P0_PInv' de la tabla 'vCCRCC_GrillaPrincipalPlantilla01' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_PInvColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P0_PVta() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_PVtaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P0_PVta' de la tabla 'vCCRCC_GrillaPrincipalPlantilla01' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_PVtaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P0_PNre() As Long
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_PNreColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P0_PNre' de la tabla 'vCCRCC_GrillaPrincipalPlantilla01' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_PNreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P0_SFR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_SFRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P0_SFR' de la tabla 'vCCRCC_GrillaPrincipalPlantilla01' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_SFRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P0_SCmp() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_SCmpColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P0_SCmp' de la tabla 'vCCRCC_GrillaPrincipalPlantilla01' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_SCmpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P0_SPre() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_SPreColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P0_SPre' de la tabla 'vCCRCC_GrillaPrincipalPlantilla01' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_SPreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P0_SInv() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_SInvColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P0_SInv' de la tabla 'vCCRCC_GrillaPrincipalPlantilla01' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_SInvColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P0_SVta() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_SVtaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P0_SVta' de la tabla 'vCCRCC_GrillaPrincipalPlantilla01' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_SVtaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P0_SNre() As Long
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_SNreColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P0_SNre' de la tabla 'vCCRCC_GrillaPrincipalPlantilla01' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_SNreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P0_IAntFac() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_IAntFacColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P0_IAntFac' de la tabla 'vCCRCC_GrillaPrincipalPlantilla0"& _ 
                            "1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_IAntFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P0_CmpFac() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_CmpFacColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P0_CmpFac' de la tabla 'vCCRCC_GrillaPrincipalPlantilla01"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_CmpFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P0_Precio() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_PrecioColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P0_Precio' de la tabla 'vCCRCC_GrillaPrincipalPlantilla01"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_PrecioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P0_InvFac() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_InvFacColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P0_InvFac' de la tabla 'vCCRCC_GrillaPrincipalPlantilla01"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_InvFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P0_VtaFac() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_VtaFacColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P0_VtaFac' de la tabla 'vCCRCC_GrillaPrincipalPlantilla01"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_VtaFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P0_Regs() As Long
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_RegsColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P0_Regs' de la tabla 'vCCRCC_GrillaPrincipalPlantilla01' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_RegsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P1_IAntFac() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P1_IAntFacColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P1_IAntFac' de la tabla 'vCCRCC_GrillaPrincipalPlantilla0"& _ 
                            "1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P1_IAntFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P1_CmpFac() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P1_CmpFacColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P1_CmpFac' de la tabla 'vCCRCC_GrillaPrincipalPlantilla01"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P1_CmpFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P1_Precio() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P1_PrecioColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P1_Precio' de la tabla 'vCCRCC_GrillaPrincipalPlantilla01"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P1_PrecioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P1_InvFac() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P1_InvFacColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P1_InvFac' de la tabla 'vCCRCC_GrillaPrincipalPlantilla01"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P1_InvFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P1_VtaFac() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P1_VtaFacColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P1_VtaFac' de la tabla 'vCCRCC_GrillaPrincipalPlantilla01"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P1_VtaFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P1_Regs() As Long
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P1_RegsColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P1_Regs' de la tabla 'vCCRCC_GrillaPrincipalPlantilla01' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P1_RegsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P2_IAntFac() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P2_IAntFacColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P2_IAntFac' de la tabla 'vCCRCC_GrillaPrincipalPlantilla0"& _ 
                            "1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P2_IAntFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P2_CmpFac() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P2_CmpFacColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P2_CmpFac' de la tabla 'vCCRCC_GrillaPrincipalPlantilla01"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P2_CmpFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P2_Precio() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P2_PrecioColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P2_Precio' de la tabla 'vCCRCC_GrillaPrincipalPlantilla01"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P2_PrecioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P2_InvFac() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P2_InvFacColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P2_InvFac' de la tabla 'vCCRCC_GrillaPrincipalPlantilla01"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P2_InvFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P2_VtaFac() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P2_VtaFacColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P2_VtaFac' de la tabla 'vCCRCC_GrillaPrincipalPlantilla01"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P2_VtaFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P2_Regs() As Long
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P2_RegsColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P2_Regs' de la tabla 'vCCRCC_GrillaPrincipalPlantilla01' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P2_RegsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIdNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaPrincipalPlantilla01.IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIdNull()
            Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP0_PCmpNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_PCmpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP0_PCmpNull()
            Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_PCmpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP0_PPreNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_PPreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP0_PPreNull()
            Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_PPreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP0_PInvNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_PInvColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP0_PInvNull()
            Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_PInvColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP0_PVtaNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_PVtaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP0_PVtaNull()
            Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_PVtaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP0_PNreNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_PNreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP0_PNreNull()
            Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_PNreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP0_SFRNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_SFRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP0_SFRNull()
            Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_SFRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP0_SCmpNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_SCmpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP0_SCmpNull()
            Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_SCmpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP0_SPreNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_SPreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP0_SPreNull()
            Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_SPreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP0_SInvNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_SInvColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP0_SInvNull()
            Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_SInvColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP0_SVtaNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_SVtaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP0_SVtaNull()
            Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_SVtaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP0_SNreNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_SNreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP0_SNreNull()
            Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_SNreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP0_IAntFacNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_IAntFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP0_IAntFacNull()
            Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_IAntFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP0_CmpFacNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_CmpFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP0_CmpFacNull()
            Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_CmpFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP0_PrecioNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_PrecioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP0_PrecioNull()
            Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_PrecioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP0_InvFacNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_InvFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP0_InvFacNull()
            Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_InvFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP0_VtaFacNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_VtaFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP0_VtaFacNull()
            Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_VtaFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP0_RegsNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_RegsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP0_RegsNull()
            Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P0_RegsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP1_IAntFacNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P1_IAntFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP1_IAntFacNull()
            Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P1_IAntFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP1_CmpFacNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P1_CmpFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP1_CmpFacNull()
            Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P1_CmpFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP1_PrecioNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P1_PrecioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP1_PrecioNull()
            Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P1_PrecioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP1_InvFacNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P1_InvFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP1_InvFacNull()
            Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P1_InvFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP1_VtaFacNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P1_VtaFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP1_VtaFacNull()
            Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P1_VtaFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP1_RegsNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P1_RegsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP1_RegsNull()
            Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P1_RegsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP2_IAntFacNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P2_IAntFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP2_IAntFacNull()
            Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P2_IAntFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP2_CmpFacNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P2_CmpFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP2_CmpFacNull()
            Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P2_CmpFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP2_PrecioNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P2_PrecioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP2_PrecioNull()
            Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P2_PrecioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP2_InvFacNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P2_InvFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP2_InvFacNull()
            Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P2_InvFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP2_VtaFacNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P2_VtaFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP2_VtaFacNull()
            Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P2_VtaFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP2_RegsNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P2_RegsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP2_RegsNull()
            Me(Me.tablevCCRCC_GrillaPrincipalPlantilla01.P2_RegsColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class vCCRCC_GrillaSecundariaPlantilla01Row
        Inherits Global.System.Data.DataRow
        
        Private tablevCCRCC_GrillaSecundariaPlantilla01 As vCCRCC_GrillaSecundariaPlantilla01DataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablevCCRCC_GrillaSecundariaPlantilla01 = CType(Me.Table,vCCRCC_GrillaSecundariaPlantilla01DataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Id() As Long
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.IdColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Id' de la tabla 'vCCRCC_GrillaSecundariaPlantilla01' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.IdColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property MedicionActual() As Integer
            Get
                Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.MedicionActualColumn),Integer)
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.MedicionActualColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CodigoZona() As Short
            Get
                Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.CodigoZonaColumn),Short)
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.CodigoZonaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Canal() As String
            Get
                Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.CanalColumn),String)
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.CanalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Categoria() As String
            Get
                Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.CategoriaColumn),String)
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.CategoriaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property NombreComercial() As String
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.NombreComercialColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'NombreComercial' de la tabla 'vCCRCC_GrillaSecundariaPlan"& _ 
                            "tilla01' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.NombreComercialColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CodigoNegocio() As Integer
            Get
                Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.CodigoNegocioColumn),Integer)
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.CodigoNegocioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CodigoProducto() As Short
            Get
                Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.CodigoProductoColumn),Short)
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.CodigoProductoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TipoDato() As Byte
            Get
                Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.TipoDatoColumn),Byte)
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.TipoDatoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P0_PCmp() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_PCmpColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P0_PCmp' de la tabla 'vCCRCC_GrillaSecundariaPlantilla01'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_PCmpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P0_PPre() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_PPreColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P0_PPre' de la tabla 'vCCRCC_GrillaSecundariaPlantilla01'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_PPreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P0_PInv() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_PInvColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P0_PInv' de la tabla 'vCCRCC_GrillaSecundariaPlantilla01'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_PInvColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P0_PVta() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_PVtaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P0_PVta' de la tabla 'vCCRCC_GrillaSecundariaPlantilla01'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_PVtaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P0_PNre() As Long
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_PNreColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P0_PNre' de la tabla 'vCCRCC_GrillaSecundariaPlantilla01'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_PNreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P0_SFR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_SFRColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P0_SFR' de la tabla 'vCCRCC_GrillaSecundariaPlantilla01' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_SFRColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P0_SCmp() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_SCmpColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P0_SCmp' de la tabla 'vCCRCC_GrillaSecundariaPlantilla01'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_SCmpColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P0_SPre() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_SPreColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P0_SPre' de la tabla 'vCCRCC_GrillaSecundariaPlantilla01'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_SPreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P0_SInv() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_SInvColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P0_SInv' de la tabla 'vCCRCC_GrillaSecundariaPlantilla01'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_SInvColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P0_SVta() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_SVtaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P0_SVta' de la tabla 'vCCRCC_GrillaSecundariaPlantilla01'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_SVtaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P0_SNre() As Long
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_SNreColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P0_SNre' de la tabla 'vCCRCC_GrillaSecundariaPlantilla01'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_SNreColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P0_IAntFac() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_IAntFacColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P0_IAntFac' de la tabla 'vCCRCC_GrillaSecundariaPlantilla"& _ 
                            "01' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_IAntFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P0_CmpFac() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_CmpFacColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P0_CmpFac' de la tabla 'vCCRCC_GrillaSecundariaPlantilla0"& _ 
                            "1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_CmpFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P0_Precio() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_PrecioColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P0_Precio' de la tabla 'vCCRCC_GrillaSecundariaPlantilla0"& _ 
                            "1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_PrecioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P0_InvFac() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_InvFacColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P0_InvFac' de la tabla 'vCCRCC_GrillaSecundariaPlantilla0"& _ 
                            "1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_InvFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P0_VtaFac() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_VtaFacColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P0_VtaFac' de la tabla 'vCCRCC_GrillaSecundariaPlantilla0"& _ 
                            "1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_VtaFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P0_Regs() As Long
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_RegsColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P0_Regs' de la tabla 'vCCRCC_GrillaSecundariaPlantilla01'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_RegsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P1_IAntFac() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P1_IAntFacColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P1_IAntFac' de la tabla 'vCCRCC_GrillaSecundariaPlantilla"& _ 
                            "01' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P1_IAntFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P1_CmpFac() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P1_CmpFacColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P1_CmpFac' de la tabla 'vCCRCC_GrillaSecundariaPlantilla0"& _ 
                            "1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P1_CmpFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P1_Precio() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P1_PrecioColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P1_Precio' de la tabla 'vCCRCC_GrillaSecundariaPlantilla0"& _ 
                            "1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P1_PrecioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P1_InvFac() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P1_InvFacColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P1_InvFac' de la tabla 'vCCRCC_GrillaSecundariaPlantilla0"& _ 
                            "1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P1_InvFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P1_VtaFac() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P1_VtaFacColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P1_VtaFac' de la tabla 'vCCRCC_GrillaSecundariaPlantilla0"& _ 
                            "1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P1_VtaFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P1_Regs() As Long
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P1_RegsColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P1_Regs' de la tabla 'vCCRCC_GrillaSecundariaPlantilla01'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P1_RegsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P2_IAntFac() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P2_IAntFacColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P2_IAntFac' de la tabla 'vCCRCC_GrillaSecundariaPlantilla"& _ 
                            "01' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P2_IAntFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P2_CmpFac() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P2_CmpFacColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P2_CmpFac' de la tabla 'vCCRCC_GrillaSecundariaPlantilla0"& _ 
                            "1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P2_CmpFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P2_Precio() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P2_PrecioColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P2_Precio' de la tabla 'vCCRCC_GrillaSecundariaPlantilla0"& _ 
                            "1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P2_PrecioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P2_InvFac() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P2_InvFacColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P2_InvFac' de la tabla 'vCCRCC_GrillaSecundariaPlantilla0"& _ 
                            "1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P2_InvFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P2_VtaFac() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P2_VtaFacColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P2_VtaFac' de la tabla 'vCCRCC_GrillaSecundariaPlantilla0"& _ 
                            "1' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P2_VtaFacColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property P2_Regs() As Long
            Get
                Try 
                    Return CType(Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P2_RegsColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'P2_Regs' de la tabla 'vCCRCC_GrillaSecundariaPlantilla01'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P2_RegsColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsIdNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaSecundariaPlantilla01.IdColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetIdNull()
            Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.IdColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsNombreComercialNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaSecundariaPlantilla01.NombreComercialColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetNombreComercialNull()
            Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.NombreComercialColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP0_PCmpNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_PCmpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP0_PCmpNull()
            Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_PCmpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP0_PPreNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_PPreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP0_PPreNull()
            Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_PPreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP0_PInvNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_PInvColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP0_PInvNull()
            Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_PInvColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP0_PVtaNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_PVtaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP0_PVtaNull()
            Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_PVtaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP0_PNreNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_PNreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP0_PNreNull()
            Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_PNreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP0_SFRNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_SFRColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP0_SFRNull()
            Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_SFRColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP0_SCmpNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_SCmpColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP0_SCmpNull()
            Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_SCmpColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP0_SPreNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_SPreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP0_SPreNull()
            Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_SPreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP0_SInvNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_SInvColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP0_SInvNull()
            Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_SInvColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP0_SVtaNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_SVtaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP0_SVtaNull()
            Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_SVtaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP0_SNreNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_SNreColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP0_SNreNull()
            Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_SNreColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP0_IAntFacNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_IAntFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP0_IAntFacNull()
            Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_IAntFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP0_CmpFacNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_CmpFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP0_CmpFacNull()
            Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_CmpFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP0_PrecioNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_PrecioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP0_PrecioNull()
            Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_PrecioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP0_InvFacNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_InvFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP0_InvFacNull()
            Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_InvFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP0_VtaFacNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_VtaFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP0_VtaFacNull()
            Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_VtaFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP0_RegsNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_RegsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP0_RegsNull()
            Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P0_RegsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP1_IAntFacNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P1_IAntFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP1_IAntFacNull()
            Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P1_IAntFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP1_CmpFacNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P1_CmpFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP1_CmpFacNull()
            Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P1_CmpFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP1_PrecioNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P1_PrecioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP1_PrecioNull()
            Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P1_PrecioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP1_InvFacNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P1_InvFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP1_InvFacNull()
            Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P1_InvFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP1_VtaFacNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P1_VtaFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP1_VtaFacNull()
            Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P1_VtaFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP1_RegsNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P1_RegsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP1_RegsNull()
            Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P1_RegsColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP2_IAntFacNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P2_IAntFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP2_IAntFacNull()
            Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P2_IAntFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP2_CmpFacNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P2_CmpFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP2_CmpFacNull()
            Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P2_CmpFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP2_PrecioNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P2_PrecioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP2_PrecioNull()
            Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P2_PrecioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP2_InvFacNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P2_InvFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP2_InvFacNull()
            Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P2_InvFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP2_VtaFacNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P2_VtaFacColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP2_VtaFacNull()
            Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P2_VtaFacColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsP2_RegsNull() As Boolean
            Return Me.IsNull(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P2_RegsColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetP2_RegsNull()
            Me(Me.tablevCCRCC_GrillaSecundariaPlantilla01.P2_RegsColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class XXXPCCRCC_Indicadores_SelRow
        Inherits Global.System.Data.DataRow
        
        Private tableXXXPCCRCC_Indicadores_Sel As XXXPCCRCC_Indicadores_SelDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableXXXPCCRCC_Indicadores_Sel = CType(Me.Table,XXXPCCRCC_Indicadores_SelDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property GrupoTitulo() As String
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_Indicadores_Sel.GrupoTituloColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'GrupoTitulo' de la tabla 'XXXPCCRCC_Indicadores_Sel' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_Indicadores_Sel.GrupoTituloColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property IdIndicador() As Short
            Get
                Return CType(Me(Me.tableXXXPCCRCC_Indicadores_Sel.IdIndicadorColumn),Short)
            End Get
            Set
                Me(Me.tableXXXPCCRCC_Indicadores_Sel.IdIndicadorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TituloIndicador() As String
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_Indicadores_Sel.TituloIndicadorColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TituloIndicador' de la tabla 'XXXPCCRCC_Indicadores_Sel' "& _ 
                            "es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_Indicadores_Sel.TituloIndicadorColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ALERTA_0() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_Indicadores_Sel.ALERTA_0Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ALERTA_0' de la tabla 'XXXPCCRCC_Indicadores_Sel' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_Indicadores_Sel.ALERTA_0Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ALERTA_1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_Indicadores_Sel.ALERTA_1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ALERTA_1' de la tabla 'XXXPCCRCC_Indicadores_Sel' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_Indicadores_Sel.ALERTA_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ALERTA_2() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_Indicadores_Sel.ALERTA_2Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ALERTA_2' de la tabla 'XXXPCCRCC_Indicadores_Sel' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_Indicadores_Sel.ALERTA_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ALERTA_3() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_Indicadores_Sel.ALERTA_3Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ALERTA_3' de la tabla 'XXXPCCRCC_Indicadores_Sel' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_Indicadores_Sel.ALERTA_3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ALERTA_4() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_Indicadores_Sel.ALERTA_4Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ALERTA_4' de la tabla 'XXXPCCRCC_Indicadores_Sel' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_Indicadores_Sel.ALERTA_4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Descripcion() As String
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_Indicadores_Sel.DescripcionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Descripcion' de la tabla 'XXXPCCRCC_Indicadores_Sel' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_Indicadores_Sel.DescripcionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TituloIndicadorPrincipal() As String
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_Indicadores_Sel.TituloIndicadorPrincipalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TituloIndicadorPrincipal' de la tabla 'XXXPCCRCC_Indicado"& _ 
                            "res_Sel' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_Indicadores_Sel.TituloIndicadorPrincipalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property TituloIndicadorSecundario() As String
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_Indicadores_Sel.TituloIndicadorSecundarioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'TituloIndicadorSecundario' de la tabla 'XXXPCCRCC_Indicad"& _ 
                            "ores_Sel' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_Indicadores_Sel.TituloIndicadorSecundarioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property EstadoUIPageGroupButton() As String
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_Indicadores_Sel.EstadoUIPageGroupButtonColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'EstadoUIPageGroupButton' de la tabla 'XXXPCCRCC_Indicador"& _ 
                            "es_Sel' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_Indicadores_Sel.EstadoUIPageGroupButtonColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SPPrincipal() As String
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_Indicadores_Sel.SPPrincipalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SPPrincipal' de la tabla 'XXXPCCRCC_Indicadores_Sel' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_Indicadores_Sel.SPPrincipalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property SPSecundario() As String
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_Indicadores_Sel.SPSecundarioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'SPSecundario' de la tabla 'XXXPCCRCC_Indicadores_Sel' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_Indicadores_Sel.SPSecundarioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property XMLGridPrincipal() As String
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_Indicadores_Sel.XMLGridPrincipalColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'XMLGridPrincipal' de la tabla 'XXXPCCRCC_Indicadores_Sel'"& _ 
                            " es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_Indicadores_Sel.XMLGridPrincipalColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property XMLGridSecundario() As String
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_Indicadores_Sel.XMLGridSecundarioColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'XMLGridSecundario' de la tabla 'XXXPCCRCC_Indicadores_Sel"& _ 
                            "' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_Indicadores_Sel.XMLGridSecundarioColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property frmPlantilla() As String
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_Indicadores_Sel.frmPlantillaColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'frmPlantilla' de la tabla 'XXXPCCRCC_Indicadores_Sel' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_Indicadores_Sel.frmPlantillaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsGrupoTituloNull() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_Indicadores_Sel.GrupoTituloColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetGrupoTituloNull()
            Me(Me.tableXXXPCCRCC_Indicadores_Sel.GrupoTituloColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTituloIndicadorNull() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_Indicadores_Sel.TituloIndicadorColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTituloIndicadorNull()
            Me(Me.tableXXXPCCRCC_Indicadores_Sel.TituloIndicadorColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsALERTA_0Null() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_Indicadores_Sel.ALERTA_0Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetALERTA_0Null()
            Me(Me.tableXXXPCCRCC_Indicadores_Sel.ALERTA_0Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsALERTA_1Null() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_Indicadores_Sel.ALERTA_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetALERTA_1Null()
            Me(Me.tableXXXPCCRCC_Indicadores_Sel.ALERTA_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsALERTA_2Null() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_Indicadores_Sel.ALERTA_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetALERTA_2Null()
            Me(Me.tableXXXPCCRCC_Indicadores_Sel.ALERTA_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsALERTA_3Null() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_Indicadores_Sel.ALERTA_3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetALERTA_3Null()
            Me(Me.tableXXXPCCRCC_Indicadores_Sel.ALERTA_3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsALERTA_4Null() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_Indicadores_Sel.ALERTA_4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetALERTA_4Null()
            Me(Me.tableXXXPCCRCC_Indicadores_Sel.ALERTA_4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsDescripcionNull() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_Indicadores_Sel.DescripcionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetDescripcionNull()
            Me(Me.tableXXXPCCRCC_Indicadores_Sel.DescripcionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTituloIndicadorPrincipalNull() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_Indicadores_Sel.TituloIndicadorPrincipalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTituloIndicadorPrincipalNull()
            Me(Me.tableXXXPCCRCC_Indicadores_Sel.TituloIndicadorPrincipalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsTituloIndicadorSecundarioNull() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_Indicadores_Sel.TituloIndicadorSecundarioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetTituloIndicadorSecundarioNull()
            Me(Me.tableXXXPCCRCC_Indicadores_Sel.TituloIndicadorSecundarioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsEstadoUIPageGroupButtonNull() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_Indicadores_Sel.EstadoUIPageGroupButtonColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetEstadoUIPageGroupButtonNull()
            Me(Me.tableXXXPCCRCC_Indicadores_Sel.EstadoUIPageGroupButtonColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSPPrincipalNull() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_Indicadores_Sel.SPPrincipalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSPPrincipalNull()
            Me(Me.tableXXXPCCRCC_Indicadores_Sel.SPPrincipalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsSPSecundarioNull() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_Indicadores_Sel.SPSecundarioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetSPSecundarioNull()
            Me(Me.tableXXXPCCRCC_Indicadores_Sel.SPSecundarioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsXMLGridPrincipalNull() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_Indicadores_Sel.XMLGridPrincipalColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetXMLGridPrincipalNull()
            Me(Me.tableXXXPCCRCC_Indicadores_Sel.XMLGridPrincipalColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsXMLGridSecundarioNull() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_Indicadores_Sel.XMLGridSecundarioColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetXMLGridSecundarioNull()
            Me(Me.tableXXXPCCRCC_Indicadores_Sel.XMLGridSecundarioColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsfrmPlantillaNull() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_Indicadores_Sel.frmPlantillaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetfrmPlantillaNull()
            Me(Me.tableXXXPCCRCC_Indicadores_Sel.frmPlantillaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Partial Public Class XXXPCCRCC_PCCategorias_SelRow
        Inherits Global.System.Data.DataRow
        
        Private tableXXXPCCRCC_PCCategorias_Sel As XXXPCCRCC_PCCategorias_SelDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableXXXPCCRCC_PCCategorias_Sel = CType(Me.Table,XXXPCCRCC_PCCategorias_SelDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property Categoria() As String
            Get
                Return CType(Me(Me.tableXXXPCCRCC_PCCategorias_Sel.CategoriaColumn),String)
            End Get
            Set
                Me(Me.tableXXXPCCRCC_PCCategorias_Sel.CategoriaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property CodigoProducto() As Short
            Get
                Return CType(Me(Me.tableXXXPCCRCC_PCCategorias_Sel.CodigoProductoColumn),Short)
            End Get
            Set
                Me(Me.tableXXXPCCRCC_PCCategorias_Sel.CodigoProductoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ALERTA_0() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_PCCategorias_Sel.ALERTA_0Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ALERTA_0' de la tabla 'XXXPCCRCC_PCCategorias_Sel' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_PCCategorias_Sel.ALERTA_0Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ALERTA_1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_PCCategorias_Sel.ALERTA_1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ALERTA_1' de la tabla 'XXXPCCRCC_PCCategorias_Sel' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_PCCategorias_Sel.ALERTA_1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ALERTA_2() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_PCCategorias_Sel.ALERTA_2Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ALERTA_2' de la tabla 'XXXPCCRCC_PCCategorias_Sel' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_PCCategorias_Sel.ALERTA_2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ALERTA_3() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_PCCategorias_Sel.ALERTA_3Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ALERTA_3' de la tabla 'XXXPCCRCC_PCCategorias_Sel' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_PCCategorias_Sel.ALERTA_3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ALERTA_4() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableXXXPCCRCC_PCCategorias_Sel.ALERTA_4Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ALERTA_4' de la tabla 'XXXPCCRCC_PCCategorias_Sel' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableXXXPCCRCC_PCCategorias_Sel.ALERTA_4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsALERTA_0Null() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_PCCategorias_Sel.ALERTA_0Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetALERTA_0Null()
            Me(Me.tableXXXPCCRCC_PCCategorias_Sel.ALERTA_0Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsALERTA_1Null() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_PCCategorias_Sel.ALERTA_1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetALERTA_1Null()
            Me(Me.tableXXXPCCRCC_PCCategorias_Sel.ALERTA_1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsALERTA_2Null() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_PCCategorias_Sel.ALERTA_2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetALERTA_2Null()
            Me(Me.tableXXXPCCRCC_PCCategorias_Sel.ALERTA_2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsALERTA_3Null() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_PCCategorias_Sel.ALERTA_3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetALERTA_3Null()
            Me(Me.tableXXXPCCRCC_PCCategorias_Sel.ALERTA_3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Function IsALERTA_4Null() As Boolean
            Return Me.IsNull(Me.tableXXXPCCRCC_PCCategorias_Sel.ALERTA_4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub SetALERTA_4Null()
            Me(Me.tableXXXPCCRCC_PCCategorias_Sel.ALERTA_4Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class XXXPCCRCC_DatosPantillaRES01RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As XXXPCCRCC_DatosPantillaRES01Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As XXXPCCRCC_DatosPantillaRES01Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As XXXPCCRCC_DatosPantillaRES01Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class vCCRCC_GrillaPrincipalPlantilla01RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As vCCRCC_GrillaPrincipalPlantilla01Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As vCCRCC_GrillaPrincipalPlantilla01Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As vCCRCC_GrillaPrincipalPlantilla01Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class vCCRCC_GrillaSecundariaPlantilla01RowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As vCCRCC_GrillaSecundariaPlantilla01Row
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As vCCRCC_GrillaSecundariaPlantilla01Row, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As vCCRCC_GrillaSecundariaPlantilla01Row
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class XXXPCCRCC_Indicadores_SelRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As XXXPCCRCC_Indicadores_SelRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As XXXPCCRCC_Indicadores_SelRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As XXXPCCRCC_Indicadores_SelRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
    Public Class XXXPCCRCC_PCCategorias_SelRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As XXXPCCRCC_PCCategorias_SelRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New(ByVal row As XXXPCCRCC_PCCategorias_SelRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Row() As XXXPCCRCC_PCCategorias_SelRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace BDPECCRCCDataSetTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class XXXPCCRCC_DatosPantillaRES01TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "XXXPCCRCC_DatosPantillaRES01"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("Canal", "Canal")
            tableMapping.ColumnMappings.Add("Categoria", "Categoria")
            tableMapping.ColumnMappings.Add("CCVNTA", "CCVNTA")
            tableMapping.ColumnMappings.Add("CodigoProducto", "CodigoProducto")
            tableMapping.ColumnMappings.Add("Frecuencia", "Frecuencia")
            tableMapping.ColumnMappings.Add("TipoDato", "TipoDato")
            tableMapping.ColumnMappings.Add("Periodo", "Periodo")
            tableMapping.ColumnMappings.Add("Etiqueta", "Etiqueta")
            tableMapping.ColumnMappings.Add("IAntFac", "IAntFac")
            tableMapping.ColumnMappings.Add("CmpFac", "CmpFac")
            tableMapping.ColumnMappings.Add("InvFac", "InvFac")
            tableMapping.ColumnMappings.Add("Pre", "Pre")
            tableMapping.ColumnMappings.Add("VtaFac", "VtaFac")
            tableMapping.ColumnMappings.Add("Tot", "Tot")
            tableMapping.ColumnMappings.Add("Title", "Title")
            tableMapping.ColumnMappings.Add("FirstName", "FirstName")
            tableMapping.ColumnMappings.Add("MiddleName", "MiddleName")
            tableMapping.ColumnMappings.Add("LastName", "LastName")
            tableMapping.ColumnMappings.Add("EmailAddress", "EmailAddress")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[XXXPCCRCC_DatosPantillaRES01] WHERE (([Id] = @Original_Id) AND"& _ 
                " ([Canal] = @Original_Canal) AND ([Categoria] = @Original_Categoria) AND ([CCVNT"& _ 
                "A] = @Original_CCVNTA) AND ((@IsNull_CodigoProducto = 1 AND [CodigoProducto] IS "& _ 
                "NULL) OR ([CodigoProducto] = @Original_CodigoProducto)) AND ((@IsNull_Frecuencia"& _ 
                " = 1 AND [Frecuencia] IS NULL) OR ([Frecuencia] = @Original_Frecuencia)) AND ([T"& _ 
                "ipoDato] = @Original_TipoDato) AND ((@IsNull_Periodo = 1 AND [Periodo] IS NULL) "& _ 
                "OR ([Periodo] = @Original_Periodo)) AND ([Etiqueta] = @Original_Etiqueta) AND (("& _ 
                "@IsNull_IAntFac = 1 AND [IAntFac] IS NULL) OR ([IAntFac] = @Original_IAntFac)) A"& _ 
                "ND ((@IsNull_CmpFac = 1 AND [CmpFac] IS NULL) OR ([CmpFac] = @Original_CmpFac)) "& _ 
                "AND ((@IsNull_InvFac = 1 AND [InvFac] IS NULL) OR ([InvFac] = @Original_InvFac))"& _ 
                " AND ((@IsNull_Pre = 1 AND [Pre] IS NULL) OR ([Pre] = @Original_Pre)) AND ((@IsN"& _ 
                "ull_VtaFac = 1 AND [VtaFac] IS NULL) OR ([VtaFac] = @Original_VtaFac)) AND ((@Is"& _ 
                "Null_Tot = 1 AND [Tot] IS NULL) OR ([Tot] = @Original_Tot)) AND ((@IsNull_Title "& _ 
                "= 1 AND [Title] IS NULL) OR ([Title] = @Original_Title)) AND ((@IsNull_FirstName"& _ 
                " = 1 AND [FirstName] IS NULL) OR ([FirstName] = @Original_FirstName)) AND ((@IsN"& _ 
                "ull_MiddleName = 1 AND [MiddleName] IS NULL) OR ([MiddleName] = @Original_Middle"& _ 
                "Name)) AND ((@IsNull_LastName = 1 AND [LastName] IS NULL) OR ([LastName] = @Orig"& _ 
                "inal_LastName)) AND ((@IsNull_EmailAddress = 1 AND [EmailAddress] IS NULL) OR (["& _ 
                "EmailAddress] = @Original_EmailAddress)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Canal", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Canal", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Categoria", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Categoria", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CCVNTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 3, 0, "CCVNTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CodigoProducto", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CodigoProducto", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CodigoProducto", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CodigoProducto", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Frecuencia", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Frecuencia", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Frecuencia", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Frecuencia", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TipoDato", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TipoDato", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Periodo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Periodo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Periodo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Periodo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Etiqueta", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Etiqueta", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IAntFac", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IAntFac", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IAntFac", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 6, "IAntFac", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CmpFac", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CmpFac", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CmpFac", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 6, "CmpFac", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InvFac", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InvFac", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InvFac", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 6, "InvFac", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Pre", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pre", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Pre", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pre", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VtaFac", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VtaFac", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VtaFac", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 6, "VtaFac", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Tot", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tot", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Tot", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 6, "Tot", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Title", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Title", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Title", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Title", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FirstName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FirstName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MiddleName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MiddleName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MiddleName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MiddleName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LastName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LastName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LastName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LastName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EmailAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmailAddress", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EmailAddress", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmailAddress", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[XXXPCCRCC_DatosPantillaRES01] ([Canal], [Categoria], [CCVNTA],"& _ 
                " [CodigoProducto], [Frecuencia], [TipoDato], [Periodo], [Etiqueta], [IAntFac], ["& _ 
                "CmpFac], [InvFac], [Pre], [VtaFac], [Tot], [Title], [FirstName], [MiddleName], ["& _ 
                "LastName], [EmailAddress]) VALUES (@Canal, @Categoria, @CCVNTA, @CodigoProducto,"& _ 
                " @Frecuencia, @TipoDato, @Periodo, @Etiqueta, @IAntFac, @CmpFac, @InvFac, @Pre, "& _ 
                "@VtaFac, @Tot, @Title, @FirstName, @MiddleName, @LastName, @EmailAddress);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELE"& _ 
                "CT Id, Canal, Categoria, CCVNTA, CodigoProducto, Frecuencia, TipoDato, Periodo, "& _ 
                "Etiqueta, IAntFac, CmpFac, InvFac, Pre, VtaFac, Tot, Title, FirstName, MiddleNam"& _ 
                "e, LastName, EmailAddress FROM XXXPCCRCC_DatosPantillaRES01 WHERE (Id = SCOPE_ID"& _ 
                "ENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Canal", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Canal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Categoria", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Categoria", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CCVNTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 3, 0, "CCVNTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CodigoProducto", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CodigoProducto", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Frecuencia", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Frecuencia", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TipoDato", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TipoDato", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Periodo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Periodo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Etiqueta", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Etiqueta", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IAntFac", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 6, "IAntFac", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CmpFac", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 6, "CmpFac", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InvFac", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 6, "InvFac", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Pre", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pre", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VtaFac", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 6, "VtaFac", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tot", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 6, "Tot", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Title", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Title", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FirstName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MiddleName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MiddleName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LastName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LastName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EmailAddress", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmailAddress", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[XXXPCCRCC_DatosPantillaRES01] SET [Canal] = @Canal, [Categoria] = @"& _ 
                "Categoria, [CCVNTA] = @CCVNTA, [CodigoProducto] = @CodigoProducto, [Frecuencia] "& _ 
                "= @Frecuencia, [TipoDato] = @TipoDato, [Periodo] = @Periodo, [Etiqueta] = @Etiqu"& _ 
                "eta, [IAntFac] = @IAntFac, [CmpFac] = @CmpFac, [InvFac] = @InvFac, [Pre] = @Pre,"& _ 
                " [VtaFac] = @VtaFac, [Tot] = @Tot, [Title] = @Title, [FirstName] = @FirstName, ["& _ 
                "MiddleName] = @MiddleName, [LastName] = @LastName, [EmailAddress] = @EmailAddres"& _ 
                "s WHERE (([Id] = @Original_Id) AND ([Canal] = @Original_Canal) AND ([Categoria] "& _ 
                "= @Original_Categoria) AND ([CCVNTA] = @Original_CCVNTA) AND ((@IsNull_CodigoPro"& _ 
                "ducto = 1 AND [CodigoProducto] IS NULL) OR ([CodigoProducto] = @Original_CodigoP"& _ 
                "roducto)) AND ((@IsNull_Frecuencia = 1 AND [Frecuencia] IS NULL) OR ([Frecuencia"& _ 
                "] = @Original_Frecuencia)) AND ([TipoDato] = @Original_TipoDato) AND ((@IsNull_P"& _ 
                "eriodo = 1 AND [Periodo] IS NULL) OR ([Periodo] = @Original_Periodo)) AND ([Etiq"& _ 
                "ueta] = @Original_Etiqueta) AND ((@IsNull_IAntFac = 1 AND [IAntFac] IS NULL) OR "& _ 
                "([IAntFac] = @Original_IAntFac)) AND ((@IsNull_CmpFac = 1 AND [CmpFac] IS NULL) "& _ 
                "OR ([CmpFac] = @Original_CmpFac)) AND ((@IsNull_InvFac = 1 AND [InvFac] IS NULL)"& _ 
                " OR ([InvFac] = @Original_InvFac)) AND ((@IsNull_Pre = 1 AND [Pre] IS NULL) OR ("& _ 
                "[Pre] = @Original_Pre)) AND ((@IsNull_VtaFac = 1 AND [VtaFac] IS NULL) OR ([VtaF"& _ 
                "ac] = @Original_VtaFac)) AND ((@IsNull_Tot = 1 AND [Tot] IS NULL) OR ([Tot] = @O"& _ 
                "riginal_Tot)) AND ((@IsNull_Title = 1 AND [Title] IS NULL) OR ([Title] = @Origin"& _ 
                "al_Title)) AND ((@IsNull_FirstName = 1 AND [FirstName] IS NULL) OR ([FirstName] "& _ 
                "= @Original_FirstName)) AND ((@IsNull_MiddleName = 1 AND [MiddleName] IS NULL) O"& _ 
                "R ([MiddleName] = @Original_MiddleName)) AND ((@IsNull_LastName = 1 AND [LastNam"& _ 
                "e] IS NULL) OR ([LastName] = @Original_LastName)) AND ((@IsNull_EmailAddress = 1"& _ 
                " AND [EmailAddress] IS NULL) OR ([EmailAddress] = @Original_EmailAddress)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SE"& _ 
                "LECT Id, Canal, Categoria, CCVNTA, CodigoProducto, Frecuencia, TipoDato, Periodo"& _ 
                ", Etiqueta, IAntFac, CmpFac, InvFac, Pre, VtaFac, Tot, Title, FirstName, MiddleN"& _ 
                "ame, LastName, EmailAddress FROM XXXPCCRCC_DatosPantillaRES01 WHERE (Id = @Id)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Canal", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Canal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Categoria", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Categoria", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CCVNTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 3, 0, "CCVNTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CodigoProducto", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CodigoProducto", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Frecuencia", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Frecuencia", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TipoDato", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TipoDato", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Periodo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Periodo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Etiqueta", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Etiqueta", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IAntFac", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 6, "IAntFac", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CmpFac", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 6, "CmpFac", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@InvFac", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 6, "InvFac", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Pre", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pre", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VtaFac", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 6, "VtaFac", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tot", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 6, "Tot", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Title", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Title", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FirstName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MiddleName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MiddleName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LastName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LastName", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EmailAddress", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmailAddress", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Id", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Canal", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Canal", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Categoria", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Categoria", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CCVNTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 3, 0, "CCVNTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CodigoProducto", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CodigoProducto", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CodigoProducto", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CodigoProducto", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Frecuencia", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Frecuencia", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Frecuencia", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Frecuencia", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TipoDato", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TipoDato", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Periodo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Periodo", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Periodo", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Periodo", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Etiqueta", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Etiqueta", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IAntFac", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IAntFac", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IAntFac", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 6, "IAntFac", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CmpFac", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CmpFac", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CmpFac", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 6, "CmpFac", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_InvFac", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "InvFac", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_InvFac", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 6, "InvFac", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Pre", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pre", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Pre", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Pre", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VtaFac", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VtaFac", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VtaFac", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 6, "VtaFac", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Tot", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Tot", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Tot", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 38, 6, "Tot", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_Title", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Title", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_Title", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Title", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FirstName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FirstName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FirstName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MiddleName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MiddleName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MiddleName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MiddleName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LastName", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LastName", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LastName", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LastName", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EmailAddress", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmailAddress", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EmailAddress", Global.System.Data.SqlDbType.NVarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EmailAddress", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Id", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "Id", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.CCRCCV2.My.MySettings.Default.BDPECCRCCConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Id, Canal, Categoria, CCVNTA, CodigoProducto, Frecuencia, TipoDato, Period"& _ 
                "o, Etiqueta, IAntFac, CmpFac, InvFac, Pre, VtaFac, Tot, Title, FirstName, Middle"& _ 
                "Name, LastName, EmailAddress FROM dbo.XXXPCCRCC_DatosPantillaRES01"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BDPECCRCCDataSet.XXXPCCRCC_DatosPantillaRES01DataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As BDPECCRCCDataSet.XXXPCCRCC_DatosPantillaRES01DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As BDPECCRCCDataSet.XXXPCCRCC_DatosPantillaRES01DataTable = New BDPECCRCCDataSet.XXXPCCRCC_DatosPantillaRES01DataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As BDPECCRCCDataSet.XXXPCCRCC_DatosPantillaRES01DataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As BDPECCRCCDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "XXXPCCRCC_DatosPantillaRES01")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_Id As Integer,  _
                    ByVal Original_Canal As String,  _
                    ByVal Original_Categoria As String,  _
                    ByVal Original_CCVNTA As Decimal,  _
                    ByVal Original_CodigoProducto As Global.System.Nullable(Of Short),  _
                    ByVal Original_Frecuencia As Global.System.Nullable(Of Byte),  _
                    ByVal Original_TipoDato As Byte,  _
                    ByVal Original_Periodo As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Etiqueta As String,  _
                    ByVal Original_IAntFac As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CmpFac As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_InvFac As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Pre As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_VtaFac As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Tot As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Title As String,  _
                    ByVal Original_FirstName As String,  _
                    ByVal Original_MiddleName As String,  _
                    ByVal Original_LastName As String,  _
                    ByVal Original_EmailAddress As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_Id,Integer)
            If (Original_Canal Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Canal")
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_Canal,String)
            End If
            If (Original_Categoria Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Categoria")
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_Categoria,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_CCVNTA,Decimal)
            If (Original_CodigoProducto.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_CodigoProducto.Value,Short)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Original_Frecuencia.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_Frecuencia.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_TipoDato,Byte)
            If (Original_Periodo.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_Periodo.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_Etiqueta Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Etiqueta")
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_Etiqueta,String)
            End If
            If (Original_IAntFac.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_IAntFac.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_CmpFac.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_CmpFac.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_InvFac.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_InvFac.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_Pre.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_Pre.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Original_VtaFac.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_VtaFac.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_Tot.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_Tot.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Original_Title Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_Title,String)
            End If
            If (Original_FirstName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_FirstName,String)
            End If
            If (Original_MiddleName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_MiddleName,String)
            End If
            If (Original_LastName Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_LastName,String)
            End If
            If (Original_EmailAddress Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_EmailAddress,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal Canal As String,  _
                    ByVal Categoria As String,  _
                    ByVal CCVNTA As Decimal,  _
                    ByVal CodigoProducto As Global.System.Nullable(Of Short),  _
                    ByVal Frecuencia As Global.System.Nullable(Of Byte),  _
                    ByVal TipoDato As Byte,  _
                    ByVal Periodo As Global.System.Nullable(Of Integer),  _
                    ByVal Etiqueta As String,  _
                    ByVal IAntFac As Global.System.Nullable(Of Decimal),  _
                    ByVal CmpFac As Global.System.Nullable(Of Decimal),  _
                    ByVal InvFac As Global.System.Nullable(Of Decimal),  _
                    ByVal Pre As Global.System.Nullable(Of Decimal),  _
                    ByVal VtaFac As Global.System.Nullable(Of Decimal),  _
                    ByVal Tot As Global.System.Nullable(Of Decimal),  _
                    ByVal Title As String,  _
                    ByVal FirstName As String,  _
                    ByVal MiddleName As String,  _
                    ByVal LastName As String,  _
                    ByVal EmailAddress As String) As Integer
            If (Canal Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Canal")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Canal,String)
            End If
            If (Categoria Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Categoria")
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(Categoria,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(CCVNTA,Decimal)
            If (CodigoProducto.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(CodigoProducto.Value,Short)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Frecuencia.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(Frecuencia.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(TipoDato,Byte)
            If (Periodo.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(Periodo.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Etiqueta Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Etiqueta")
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(Etiqueta,String)
            End If
            If (IAntFac.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(IAntFac.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (CmpFac.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(CmpFac.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (InvFac.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(InvFac.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Pre.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(Pre.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (VtaFac.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(VtaFac.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Tot.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(Tot.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Title Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(Title,String)
            End If
            If (FirstName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(FirstName,String)
            End If
            If (MiddleName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(MiddleName,String)
            End If
            If (LastName Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(LastName,String)
            End If
            If (EmailAddress Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(EmailAddress,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Canal As String,  _
                    ByVal Categoria As String,  _
                    ByVal CCVNTA As Decimal,  _
                    ByVal CodigoProducto As Global.System.Nullable(Of Short),  _
                    ByVal Frecuencia As Global.System.Nullable(Of Byte),  _
                    ByVal TipoDato As Byte,  _
                    ByVal Periodo As Global.System.Nullable(Of Integer),  _
                    ByVal Etiqueta As String,  _
                    ByVal IAntFac As Global.System.Nullable(Of Decimal),  _
                    ByVal CmpFac As Global.System.Nullable(Of Decimal),  _
                    ByVal InvFac As Global.System.Nullable(Of Decimal),  _
                    ByVal Pre As Global.System.Nullable(Of Decimal),  _
                    ByVal VtaFac As Global.System.Nullable(Of Decimal),  _
                    ByVal Tot As Global.System.Nullable(Of Decimal),  _
                    ByVal Title As String,  _
                    ByVal FirstName As String,  _
                    ByVal MiddleName As String,  _
                    ByVal LastName As String,  _
                    ByVal EmailAddress As String,  _
                    ByVal Original_Id As Integer,  _
                    ByVal Original_Canal As String,  _
                    ByVal Original_Categoria As String,  _
                    ByVal Original_CCVNTA As Decimal,  _
                    ByVal Original_CodigoProducto As Global.System.Nullable(Of Short),  _
                    ByVal Original_Frecuencia As Global.System.Nullable(Of Byte),  _
                    ByVal Original_TipoDato As Byte,  _
                    ByVal Original_Periodo As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Etiqueta As String,  _
                    ByVal Original_IAntFac As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CmpFac As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_InvFac As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Pre As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_VtaFac As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Tot As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Title As String,  _
                    ByVal Original_FirstName As String,  _
                    ByVal Original_MiddleName As String,  _
                    ByVal Original_LastName As String,  _
                    ByVal Original_EmailAddress As String,  _
                    ByVal Id As Integer) As Integer
            If (Canal Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Canal")
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(Canal,String)
            End If
            If (Categoria Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Categoria")
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Categoria,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CCVNTA,Decimal)
            If (CodigoProducto.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CodigoProducto.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Frecuencia.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Frecuencia.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(TipoDato,Byte)
            If (Periodo.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Periodo.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Etiqueta Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Etiqueta")
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Etiqueta,String)
            End If
            If (IAntFac.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(IAntFac.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (CmpFac.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(CmpFac.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (InvFac.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(InvFac.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Pre.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Pre.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (VtaFac.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(VtaFac.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Tot.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Tot.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Title Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Title,String)
            End If
            If (FirstName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(FirstName,String)
            End If
            If (MiddleName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(MiddleName,String)
            End If
            If (LastName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(LastName,String)
            End If
            If (EmailAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(EmailAddress,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_Id,Integer)
            If (Original_Canal Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Canal")
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_Canal,String)
            End If
            If (Original_Categoria Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Categoria")
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_Categoria,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_CCVNTA,Decimal)
            If (Original_CodigoProducto.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_CodigoProducto.Value,Short)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_Frecuencia.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_Frecuencia.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_TipoDato,Byte)
            If (Original_Periodo.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_Periodo.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Original_Etiqueta Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_Etiqueta")
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_Etiqueta,String)
            End If
            If (Original_IAntFac.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_IAntFac.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_CmpFac.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_CmpFac.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_InvFac.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_InvFac.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_Pre.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_Pre.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_VtaFac.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_VtaFac.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_Tot.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_Tot.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_Title Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_Title,String)
            End If
            If (Original_FirstName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_FirstName,String)
            End If
            If (Original_MiddleName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_MiddleName,String)
            End If
            If (Original_LastName Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_LastName,String)
            End If
            If (Original_EmailAddress Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_EmailAddress,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Id,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal Canal As String,  _
                    ByVal Categoria As String,  _
                    ByVal CCVNTA As Decimal,  _
                    ByVal CodigoProducto As Global.System.Nullable(Of Short),  _
                    ByVal Frecuencia As Global.System.Nullable(Of Byte),  _
                    ByVal TipoDato As Byte,  _
                    ByVal Periodo As Global.System.Nullable(Of Integer),  _
                    ByVal Etiqueta As String,  _
                    ByVal IAntFac As Global.System.Nullable(Of Decimal),  _
                    ByVal CmpFac As Global.System.Nullable(Of Decimal),  _
                    ByVal InvFac As Global.System.Nullable(Of Decimal),  _
                    ByVal Pre As Global.System.Nullable(Of Decimal),  _
                    ByVal VtaFac As Global.System.Nullable(Of Decimal),  _
                    ByVal Tot As Global.System.Nullable(Of Decimal),  _
                    ByVal Title As String,  _
                    ByVal FirstName As String,  _
                    ByVal MiddleName As String,  _
                    ByVal LastName As String,  _
                    ByVal EmailAddress As String,  _
                    ByVal Original_Id As Integer,  _
                    ByVal Original_Canal As String,  _
                    ByVal Original_Categoria As String,  _
                    ByVal Original_CCVNTA As Decimal,  _
                    ByVal Original_CodigoProducto As Global.System.Nullable(Of Short),  _
                    ByVal Original_Frecuencia As Global.System.Nullable(Of Byte),  _
                    ByVal Original_TipoDato As Byte,  _
                    ByVal Original_Periodo As Global.System.Nullable(Of Integer),  _
                    ByVal Original_Etiqueta As String,  _
                    ByVal Original_IAntFac As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CmpFac As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_InvFac As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Pre As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_VtaFac As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Tot As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_Title As String,  _
                    ByVal Original_FirstName As String,  _
                    ByVal Original_MiddleName As String,  _
                    ByVal Original_LastName As String,  _
                    ByVal Original_EmailAddress As String) As Integer
            Return Me.Update(Canal, Categoria, CCVNTA, CodigoProducto, Frecuencia, TipoDato, Periodo, Etiqueta, IAntFac, CmpFac, InvFac, Pre, VtaFac, Tot, Title, FirstName, MiddleName, LastName, EmailAddress, Original_Id, Original_Canal, Original_Categoria, Original_CCVNTA, Original_CodigoProducto, Original_Frecuencia, Original_TipoDato, Original_Periodo, Original_Etiqueta, Original_IAntFac, Original_CmpFac, Original_InvFac, Original_Pre, Original_VtaFac, Original_Tot, Original_Title, Original_FirstName, Original_MiddleName, Original_LastName, Original_EmailAddress, Original_Id)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class vCCRCC_GrillaPrincipalPlantilla01TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "vCCRCC_GrillaPrincipalPlantilla01"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("MedicionActual", "MedicionActual")
            tableMapping.ColumnMappings.Add("CodigoZona", "CodigoZona")
            tableMapping.ColumnMappings.Add("Canal", "Canal")
            tableMapping.ColumnMappings.Add("Categoria", "Categoria")
            tableMapping.ColumnMappings.Add("TipoDato", "TipoDato")
            tableMapping.ColumnMappings.Add("CodigoProducto", "CodigoProducto")
            tableMapping.ColumnMappings.Add("P0_PCmp", "P0_PCmp")
            tableMapping.ColumnMappings.Add("P0_PPre", "P0_PPre")
            tableMapping.ColumnMappings.Add("P0_PInv", "P0_PInv")
            tableMapping.ColumnMappings.Add("P0_PVta", "P0_PVta")
            tableMapping.ColumnMappings.Add("P0_PNre", "P0_PNre")
            tableMapping.ColumnMappings.Add("P0_SFR", "P0_SFR")
            tableMapping.ColumnMappings.Add("P0_SCmp", "P0_SCmp")
            tableMapping.ColumnMappings.Add("P0_SPre", "P0_SPre")
            tableMapping.ColumnMappings.Add("P0_SInv", "P0_SInv")
            tableMapping.ColumnMappings.Add("P0_SVta", "P0_SVta")
            tableMapping.ColumnMappings.Add("P0_SNre", "P0_SNre")
            tableMapping.ColumnMappings.Add("P0_IAntFac", "P0_IAntFac")
            tableMapping.ColumnMappings.Add("P0_CmpFac", "P0_CmpFac")
            tableMapping.ColumnMappings.Add("P0_Precio", "P0_Precio")
            tableMapping.ColumnMappings.Add("P0_InvFac", "P0_InvFac")
            tableMapping.ColumnMappings.Add("P0_VtaFac", "P0_VtaFac")
            tableMapping.ColumnMappings.Add("P0_Regs", "P0_Regs")
            tableMapping.ColumnMappings.Add("P1_IAntFac", "P1_IAntFac")
            tableMapping.ColumnMappings.Add("P1_CmpFac", "P1_CmpFac")
            tableMapping.ColumnMappings.Add("P1_Precio", "P1_Precio")
            tableMapping.ColumnMappings.Add("P1_InvFac", "P1_InvFac")
            tableMapping.ColumnMappings.Add("P1_VtaFac", "P1_VtaFac")
            tableMapping.ColumnMappings.Add("P1_Regs", "P1_Regs")
            tableMapping.ColumnMappings.Add("P2_IAntFac", "P2_IAntFac")
            tableMapping.ColumnMappings.Add("P2_CmpFac", "P2_CmpFac")
            tableMapping.ColumnMappings.Add("P2_Precio", "P2_Precio")
            tableMapping.ColumnMappings.Add("P2_InvFac", "P2_InvFac")
            tableMapping.ColumnMappings.Add("P2_VtaFac", "P2_VtaFac")
            tableMapping.ColumnMappings.Add("P2_Regs", "P2_Regs")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.CCRCCV2.My.MySettings.Default.BDPECCRCCConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Id, MedicionActual, CodigoZona, Canal, Categoria, TipoDato, CodigoProducto"& _ 
                ", P0_PCmp, P0_PPre, P0_PInv, P0_PVta, P0_PNre, P0_SFR, P0_SCmp, P0_SPre, P0_SInv"& _ 
                ", P0_SVta, P0_SNre, P0_IAntFac, P0_CmpFac, P0_Precio, P0_InvFac, P0_VtaFac, P0_R"& _ 
                "egs, P1_IAntFac, P1_CmpFac, P1_Precio, P1_InvFac, P1_VtaFac, P1_Regs, P2_IAntFac"& _ 
                ", P2_CmpFac, P2_Precio, P2_InvFac, P2_VtaFac, P2_Regs FROM dbo.vCCRCC_GrillaPrin"& _ 
                "cipalPlantilla01"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BDPECCRCCDataSet.vCCRCC_GrillaPrincipalPlantilla01DataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As BDPECCRCCDataSet.vCCRCC_GrillaPrincipalPlantilla01DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As BDPECCRCCDataSet.vCCRCC_GrillaPrincipalPlantilla01DataTable = New BDPECCRCCDataSet.vCCRCC_GrillaPrincipalPlantilla01DataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class vCCRCC_GrillaSecundariaPlantilla01TableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "vCCRCC_GrillaSecundariaPlantilla01"
            tableMapping.ColumnMappings.Add("Id", "Id")
            tableMapping.ColumnMappings.Add("MedicionActual", "MedicionActual")
            tableMapping.ColumnMappings.Add("CodigoZona", "CodigoZona")
            tableMapping.ColumnMappings.Add("Canal", "Canal")
            tableMapping.ColumnMappings.Add("Categoria", "Categoria")
            tableMapping.ColumnMappings.Add("NombreComercial", "NombreComercial")
            tableMapping.ColumnMappings.Add("CodigoNegocio", "CodigoNegocio")
            tableMapping.ColumnMappings.Add("CodigoProducto", "CodigoProducto")
            tableMapping.ColumnMappings.Add("TipoDato", "TipoDato")
            tableMapping.ColumnMappings.Add("P0_PCmp", "P0_PCmp")
            tableMapping.ColumnMappings.Add("P0_PPre", "P0_PPre")
            tableMapping.ColumnMappings.Add("P0_PInv", "P0_PInv")
            tableMapping.ColumnMappings.Add("P0_PVta", "P0_PVta")
            tableMapping.ColumnMappings.Add("P0_PNre", "P0_PNre")
            tableMapping.ColumnMappings.Add("P0_SFR", "P0_SFR")
            tableMapping.ColumnMappings.Add("P0_SCmp", "P0_SCmp")
            tableMapping.ColumnMappings.Add("P0_SPre", "P0_SPre")
            tableMapping.ColumnMappings.Add("P0_SInv", "P0_SInv")
            tableMapping.ColumnMappings.Add("P0_SVta", "P0_SVta")
            tableMapping.ColumnMappings.Add("P0_SNre", "P0_SNre")
            tableMapping.ColumnMappings.Add("P0_IAntFac", "P0_IAntFac")
            tableMapping.ColumnMappings.Add("P0_CmpFac", "P0_CmpFac")
            tableMapping.ColumnMappings.Add("P0_Precio", "P0_Precio")
            tableMapping.ColumnMappings.Add("P0_InvFac", "P0_InvFac")
            tableMapping.ColumnMappings.Add("P0_VtaFac", "P0_VtaFac")
            tableMapping.ColumnMappings.Add("P0_Regs", "P0_Regs")
            tableMapping.ColumnMappings.Add("P1_IAntFac", "P1_IAntFac")
            tableMapping.ColumnMappings.Add("P1_CmpFac", "P1_CmpFac")
            tableMapping.ColumnMappings.Add("P1_Precio", "P1_Precio")
            tableMapping.ColumnMappings.Add("P1_InvFac", "P1_InvFac")
            tableMapping.ColumnMappings.Add("P1_VtaFac", "P1_VtaFac")
            tableMapping.ColumnMappings.Add("P1_Regs", "P1_Regs")
            tableMapping.ColumnMappings.Add("P2_IAntFac", "P2_IAntFac")
            tableMapping.ColumnMappings.Add("P2_CmpFac", "P2_CmpFac")
            tableMapping.ColumnMappings.Add("P2_Precio", "P2_Precio")
            tableMapping.ColumnMappings.Add("P2_InvFac", "P2_InvFac")
            tableMapping.ColumnMappings.Add("P2_VtaFac", "P2_VtaFac")
            tableMapping.ColumnMappings.Add("P2_Regs", "P2_Regs")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.CCRCCV2.My.MySettings.Default.BDPECCRCCConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Id, MedicionActual, CodigoZona, Canal, Categoria, NombreComercial, CodigoN"& _ 
                "egocio, CodigoProducto, TipoDato, P0_PCmp, P0_PPre, P0_PInv, P0_PVta, P0_PNre, P"& _ 
                "0_SFR, P0_SCmp, P0_SPre, P0_SInv, P0_SVta, P0_SNre, P0_IAntFac, P0_CmpFac, P0_Pr"& _ 
                "ecio, P0_InvFac, P0_VtaFac, P0_Regs, P1_IAntFac, P1_CmpFac, P1_Precio, P1_InvFac"& _ 
                ", P1_VtaFac, P1_Regs, P2_IAntFac, P2_CmpFac, P2_Precio, P2_InvFac, P2_VtaFac, P2"& _ 
                "_Regs FROM dbo.vCCRCC_GrillaSecundariaPlantilla01"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BDPECCRCCDataSet.vCCRCC_GrillaSecundariaPlantilla01DataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As BDPECCRCCDataSet.vCCRCC_GrillaSecundariaPlantilla01DataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As BDPECCRCCDataSet.vCCRCC_GrillaSecundariaPlantilla01DataTable = New BDPECCRCCDataSet.vCCRCC_GrillaSecundariaPlantilla01DataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class XXXPCCRCC_Indicadores_SelTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "XXXPCCRCC_Indicadores_Sel"
            tableMapping.ColumnMappings.Add("GrupoTitulo", "GrupoTitulo")
            tableMapping.ColumnMappings.Add("IdIndicador", "IdIndicador")
            tableMapping.ColumnMappings.Add("TituloIndicador", "TituloIndicador")
            tableMapping.ColumnMappings.Add("ALERTA_0", "ALERTA_0")
            tableMapping.ColumnMappings.Add("ALERTA_1", "ALERTA_1")
            tableMapping.ColumnMappings.Add("ALERTA_2", "ALERTA_2")
            tableMapping.ColumnMappings.Add("ALERTA_3", "ALERTA_3")
            tableMapping.ColumnMappings.Add("ALERTA_4", "ALERTA_4")
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion")
            tableMapping.ColumnMappings.Add("TituloIndicadorPrincipal", "TituloIndicadorPrincipal")
            tableMapping.ColumnMappings.Add("TituloIndicadorSecundario", "TituloIndicadorSecundario")
            tableMapping.ColumnMappings.Add("EstadoUIPageGroupButton", "EstadoUIPageGroupButton")
            tableMapping.ColumnMappings.Add("SPPrincipal", "SPPrincipal")
            tableMapping.ColumnMappings.Add("SPSecundario", "SPSecundario")
            tableMapping.ColumnMappings.Add("XMLGridPrincipal", "XMLGridPrincipal")
            tableMapping.ColumnMappings.Add("XMLGridSecundario", "XMLGridSecundario")
            tableMapping.ColumnMappings.Add("frmPlantilla", "frmPlantilla")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[XXXPCCRCC_Indicadores_Sel] ([GrupoTitulo], [IdIndicador], [Tit"& _ 
                "uloIndicador], [ALERTA_0], [ALERTA_1], [ALERTA_2], [ALERTA_3], [ALERTA_4], [Desc"& _ 
                "ripcion], [TituloIndicadorPrincipal], [TituloIndicadorSecundario], [EstadoUIPage"& _ 
                "GroupButton], [SPPrincipal], [SPSecundario], [XMLGridPrincipal], [XMLGridSecunda"& _ 
                "rio], [frmPlantilla]) VALUES (@GrupoTitulo, @IdIndicador, @TituloIndicador, @ALE"& _ 
                "RTA_0, @ALERTA_1, @ALERTA_2, @ALERTA_3, @ALERTA_4, @Descripcion, @TituloIndicado"& _ 
                "rPrincipal, @TituloIndicadorSecundario, @EstadoUIPageGroupButton, @SPPrincipal, "& _ 
                "@SPSecundario, @XMLGridPrincipal, @XMLGridSecundario, @frmPlantilla)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@GrupoTitulo", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "GrupoTitulo", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IdIndicador", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IdIndicador", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TituloIndicador", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TituloIndicador", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ALERTA_0", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ALERTA_0", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ALERTA_1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ALERTA_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ALERTA_2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ALERTA_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ALERTA_3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ALERTA_3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ALERTA_4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ALERTA_4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Descripcion", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Descripcion", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TituloIndicadorPrincipal", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TituloIndicadorPrincipal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TituloIndicadorSecundario", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TituloIndicadorSecundario", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EstadoUIPageGroupButton", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EstadoUIPageGroupButton", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPPrincipal", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPPrincipal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SPSecundario", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SPSecundario", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XMLGridPrincipal", Global.System.Data.SqlDbType.Xml, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XMLGridPrincipal", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@XMLGridSecundario", Global.System.Data.SqlDbType.Xml, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "XMLGridSecundario", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@frmPlantilla", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "frmPlantilla", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.CCRCCV2.My.MySettings.Default.BDPECCRCCConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT GrupoTitulo, IdIndicador, TituloIndicador, ALERTA_0, ALERTA_1, ALERTA_2, A"& _ 
                "LERTA_3, ALERTA_4, Descripcion, TituloIndicadorPrincipal, TituloIndicadorSecunda"& _ 
                "rio, EstadoUIPageGroupButton, SPPrincipal, SPSecundario, XMLGridPrincipal, XMLGr"& _ 
                "idSecundario, frmPlantilla FROM dbo.XXXPCCRCC_Indicadores_Sel"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BDPECCRCCDataSet.XXXPCCRCC_Indicadores_SelDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As BDPECCRCCDataSet.XXXPCCRCC_Indicadores_SelDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As BDPECCRCCDataSet.XXXPCCRCC_Indicadores_SelDataTable = New BDPECCRCCDataSet.XXXPCCRCC_Indicadores_SelDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As BDPECCRCCDataSet.XXXPCCRCC_Indicadores_SelDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As BDPECCRCCDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "XXXPCCRCC_Indicadores_Sel")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal GrupoTitulo As String,  _
                    ByVal IdIndicador As Short,  _
                    ByVal TituloIndicador As String,  _
                    ByVal ALERTA_0 As Global.System.Nullable(Of Integer),  _
                    ByVal ALERTA_1 As Global.System.Nullable(Of Integer),  _
                    ByVal ALERTA_2 As Global.System.Nullable(Of Integer),  _
                    ByVal ALERTA_3 As Global.System.Nullable(Of Integer),  _
                    ByVal ALERTA_4 As Global.System.Nullable(Of Integer),  _
                    ByVal Descripcion As String,  _
                    ByVal TituloIndicadorPrincipal As String,  _
                    ByVal TituloIndicadorSecundario As String,  _
                    ByVal EstadoUIPageGroupButton As String,  _
                    ByVal SPPrincipal As String,  _
                    ByVal SPSecundario As String,  _
                    ByVal XMLGridPrincipal As Object,  _
                    ByVal XMLGridSecundario As Object,  _
                    ByVal frmPlantilla As String) As Integer
            If (GrupoTitulo Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(GrupoTitulo,String)
            End If
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(IdIndicador,Short)
            If (TituloIndicador Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(TituloIndicador,String)
            End If
            If (ALERTA_0.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ALERTA_0.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (ALERTA_1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(ALERTA_1.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (ALERTA_2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(ALERTA_2.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (ALERTA_3.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(ALERTA_3.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (ALERTA_4.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(ALERTA_4.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Descripcion Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(Descripcion,String)
            End If
            If (TituloIndicadorPrincipal Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(TituloIndicadorPrincipal,String)
            End If
            If (TituloIndicadorSecundario Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(TituloIndicadorSecundario,String)
            End If
            If (EstadoUIPageGroupButton Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(EstadoUIPageGroupButton,String)
            End If
            If (SPPrincipal Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(SPPrincipal,String)
            End If
            If (SPSecundario Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(SPSecundario,String)
            End If
            If (XMLGridPrincipal Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(XMLGridPrincipal,Object)
            End If
            If (XMLGridSecundario Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(XMLGridSecundario,Object)
            End If
            If (frmPlantilla Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(frmPlantilla,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class XXXPCCRCC_PCCategorias_SelTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "XXXPCCRCC_PCCategorias_Sel"
            tableMapping.ColumnMappings.Add("Categoria", "Categoria")
            tableMapping.ColumnMappings.Add("CodigoProducto", "CodigoProducto")
            tableMapping.ColumnMappings.Add("ALERTA_0", "ALERTA_0")
            tableMapping.ColumnMappings.Add("ALERTA_1", "ALERTA_1")
            tableMapping.ColumnMappings.Add("ALERTA_2", "ALERTA_2")
            tableMapping.ColumnMappings.Add("ALERTA_3", "ALERTA_3")
            tableMapping.ColumnMappings.Add("ALERTA_4", "ALERTA_4")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[XXXPCCRCC_PCCategorias_Sel] ([Categoria], [CodigoProducto], [A"& _ 
                "LERTA_0], [ALERTA_1], [ALERTA_2], [ALERTA_3], [ALERTA_4]) VALUES (@Categoria, @C"& _ 
                "odigoProducto, @ALERTA_0, @ALERTA_1, @ALERTA_2, @ALERTA_3, @ALERTA_4)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Categoria", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "Categoria", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CodigoProducto", Global.System.Data.SqlDbType.SmallInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CodigoProducto", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ALERTA_0", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ALERTA_0", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ALERTA_1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ALERTA_1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ALERTA_2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ALERTA_2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ALERTA_3", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ALERTA_3", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ALERTA_4", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ALERTA_4", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection
            Me._connection.ConnectionString = Global.CCRCCV2.My.MySettings.Default.BDPECCRCCConnectionString
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT Categoria, CodigoProducto, ALERTA_0, ALERTA_1, ALERTA_2, ALERTA_3, ALERTA_"& _ 
                "4 FROM dbo.XXXPCCRCC_PCCategorias_Sel"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As BDPECCRCCDataSet.XXXPCCRCC_PCCategorias_SelDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As BDPECCRCCDataSet.XXXPCCRCC_PCCategorias_SelDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As BDPECCRCCDataSet.XXXPCCRCC_PCCategorias_SelDataTable = New BDPECCRCCDataSet.XXXPCCRCC_PCCategorias_SelDataTable
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As BDPECCRCCDataSet.XXXPCCRCC_PCCategorias_SelDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As BDPECCRCCDataSet) As Integer
            Return Me.Adapter.Update(dataSet, "XXXPCCRCC_PCCategorias_Sel")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal Categoria As String, ByVal CodigoProducto As Short, ByVal ALERTA_0 As Global.System.Nullable(Of Integer), ByVal ALERTA_1 As Global.System.Nullable(Of Integer), ByVal ALERTA_2 As Global.System.Nullable(Of Integer), ByVal ALERTA_3 As Global.System.Nullable(Of Integer), ByVal ALERTA_4 As Global.System.Nullable(Of Integer)) As Integer
            If (Categoria Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Categoria")
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(Categoria,String)
            End If
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(CodigoProducto,Short)
            If (ALERTA_0.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(ALERTA_0.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (ALERTA_1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(ALERTA_1.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (ALERTA_2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(ALERTA_2.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (ALERTA_3.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(ALERTA_3.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (ALERTA_4.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(ALERTA_4.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0"),  _
     Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _xXXPCCRCC_DatosPantillaRES01TableAdapter As XXXPCCRCC_DatosPantillaRES01TableAdapter
        
        Private _xXXPCCRCC_Indicadores_SelTableAdapter As XXXPCCRCC_Indicadores_SelTableAdapter
        
        Private _xXXPCCRCC_PCCategorias_SelTableAdapter As XXXPCCRCC_PCCategorias_SelTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property XXXPCCRCC_DatosPantillaRES01TableAdapter() As XXXPCCRCC_DatosPantillaRES01TableAdapter
            Get
                Return Me._xXXPCCRCC_DatosPantillaRES01TableAdapter
            End Get
            Set
                Me._xXXPCCRCC_DatosPantillaRES01TableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property XXXPCCRCC_Indicadores_SelTableAdapter() As XXXPCCRCC_Indicadores_SelTableAdapter
            Get
                Return Me._xXXPCCRCC_Indicadores_SelTableAdapter
            End Get
            Set
                Me._xXXPCCRCC_Indicadores_SelTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=8.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"& _ 
            "", "System.Drawing.Design.UITypeEditor")>  _
        Public Property XXXPCCRCC_PCCategorias_SelTableAdapter() As XXXPCCRCC_PCCategorias_SelTableAdapter
            Get
                Return Me._xXXPCCRCC_PCCategorias_SelTableAdapter
            End Get
            Set
                Me._xXXPCCRCC_PCCategorias_SelTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._xXXPCCRCC_DatosPantillaRES01TableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._xXXPCCRCC_DatosPantillaRES01TableAdapter.Connection) Is Nothing)) Then
                    Return Me._xXXPCCRCC_DatosPantillaRES01TableAdapter.Connection
                End If
                If ((Not (Me._xXXPCCRCC_Indicadores_SelTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._xXXPCCRCC_Indicadores_SelTableAdapter.Connection) Is Nothing)) Then
                    Return Me._xXXPCCRCC_Indicadores_SelTableAdapter.Connection
                End If
                If ((Not (Me._xXXPCCRCC_PCCategorias_SelTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._xXXPCCRCC_PCCategorias_SelTableAdapter.Connection) Is Nothing)) Then
                    Return Me._xXXPCCRCC_PCCategorias_SelTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._xXXPCCRCC_DatosPantillaRES01TableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._xXXPCCRCC_Indicadores_SelTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._xXXPCCRCC_PCCategorias_SelTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As BDPECCRCCDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._xXXPCCRCC_Indicadores_SelTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.XXXPCCRCC_Indicadores_Sel.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._xXXPCCRCC_Indicadores_SelTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._xXXPCCRCC_PCCategorias_SelTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.XXXPCCRCC_PCCategorias_Sel.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._xXXPCCRCC_PCCategorias_SelTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._xXXPCCRCC_DatosPantillaRES01TableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.XXXPCCRCC_DatosPantillaRES01.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._xXXPCCRCC_DatosPantillaRES01TableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateInsertedRows(ByVal dataSet As BDPECCRCCDataSet, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._xXXPCCRCC_Indicadores_SelTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.XXXPCCRCC_Indicadores_Sel.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._xXXPCCRCC_Indicadores_SelTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._xXXPCCRCC_PCCategorias_SelTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.XXXPCCRCC_PCCategorias_Sel.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._xXXPCCRCC_PCCategorias_SelTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._xXXPCCRCC_DatosPantillaRES01TableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.XXXPCCRCC_DatosPantillaRES01.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._xXXPCCRCC_DatosPantillaRES01TableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function UpdateDeletedRows(ByVal dataSet As BDPECCRCCDataSet, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._xXXPCCRCC_DatosPantillaRES01TableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.XXXPCCRCC_DatosPantillaRES01.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._xXXPCCRCC_DatosPantillaRES01TableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._xXXPCCRCC_PCCategorias_SelTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.XXXPCCRCC_PCCategorias_Sel.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._xXXPCCRCC_PCCategorias_SelTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._xXXPCCRCC_Indicadores_SelTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.XXXPCCRCC_Indicadores_Sel.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._xXXPCCRCC_Indicadores_SelTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Public Overridable Function UpdateAll(ByVal dataSet As BDPECCRCCDataSet) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._xXXPCCRCC_DatosPantillaRES01TableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._xXXPCCRCC_DatosPantillaRES01TableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._xXXPCCRCC_Indicadores_SelTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._xXXPCCRCC_Indicadores_SelTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._xXXPCCRCC_PCCategorias_SelTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._xXXPCCRCC_PCCategorias_SelTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda"& _ 
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co"& _ 
                        "n las transacciones o el estado actual no permite que comience la transacción.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._xXXPCCRCC_DatosPantillaRES01TableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._xXXPCCRCC_DatosPantillaRES01TableAdapter, Me._xXXPCCRCC_DatosPantillaRES01TableAdapter.Connection)
                    Me._xXXPCCRCC_DatosPantillaRES01TableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._xXXPCCRCC_DatosPantillaRES01TableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._xXXPCCRCC_DatosPantillaRES01TableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._xXXPCCRCC_DatosPantillaRES01TableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._xXXPCCRCC_DatosPantillaRES01TableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._xXXPCCRCC_Indicadores_SelTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._xXXPCCRCC_Indicadores_SelTableAdapter, Me._xXXPCCRCC_Indicadores_SelTableAdapter.Connection)
                    Me._xXXPCCRCC_Indicadores_SelTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._xXXPCCRCC_Indicadores_SelTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._xXXPCCRCC_Indicadores_SelTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._xXXPCCRCC_Indicadores_SelTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._xXXPCCRCC_Indicadores_SelTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._xXXPCCRCC_PCCategorias_SelTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._xXXPCCRCC_PCCategorias_SelTableAdapter, Me._xXXPCCRCC_PCCategorias_SelTableAdapter.Connection)
                    Me._xXXPCCRCC_PCCategorias_SelTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._xXXPCCRCC_PCCategorias_SelTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._xXXPCCRCC_PCCategorias_SelTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._xXXPCCRCC_PCCategorias_SelTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._xXXPCCRCC_PCCategorias_SelTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._xXXPCCRCC_DatosPantillaRES01TableAdapter) Is Nothing) Then
                    Me._xXXPCCRCC_DatosPantillaRES01TableAdapter.Connection = CType(revertConnections(Me._xXXPCCRCC_DatosPantillaRES01TableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._xXXPCCRCC_DatosPantillaRES01TableAdapter.Transaction = Nothing
                End If
                If (Not (Me._xXXPCCRCC_Indicadores_SelTableAdapter) Is Nothing) Then
                    Me._xXXPCCRCC_Indicadores_SelTableAdapter.Connection = CType(revertConnections(Me._xXXPCCRCC_Indicadores_SelTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._xXXPCCRCC_Indicadores_SelTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._xXXPCCRCC_PCCategorias_SelTableAdapter) Is Nothing) Then
                    Me._xXXPCCRCC_PCCategorias_SelTableAdapter.Connection = CType(revertConnections(Me._xXXPCCRCC_PCCategorias_SelTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._xXXPCCRCC_PCCategorias_SelTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "2.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Private Function IsChildAndParent(ByVal child As Global.System.Data.DataRow, ByVal parent As Global.System.Data.DataRow) As Boolean
                Global.System.Diagnostics.Debug.Assert((Not (child) Is Nothing))
                Global.System.Diagnostics.Debug.Assert((Not (parent) Is Nothing))
                Dim newParent As Global.System.Data.DataRow = child.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (newParent) Is Nothing)  _
                            AndAlso ((Object.ReferenceEquals(newParent, child) = false)  _
                            AndAlso (Object.ReferenceEquals(newParent, parent) = false)))
                    newParent = newParent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop
                If (newParent Is Nothing) Then
                    newParent = child.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)
                    Do While ((Not (newParent) Is Nothing)  _
                                AndAlso ((Object.ReferenceEquals(newParent, child) = false)  _
                                AndAlso (Object.ReferenceEquals(newParent, parent) = false)))
                        newParent = newParent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If
                If Object.ReferenceEquals(newParent, parent) Then
                    Return true
                End If
                Return false
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute()>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                'Is row1 the child or grandchild of row2
                If Me.IsChildAndParent(row1, row2) Then
                    Return Me._childFirst
                End If

                'Is row2 the child or grandchild of row1
                If Me.IsChildAndParent(row2, row1) Then
                    Return (-1 * Me._childFirst)
                End If
                Return 0
            End Function
        End Class
    End Class
End Namespace
